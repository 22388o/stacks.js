{
	"id": 0,
	"name": "@stacks/cli 1.0.0-beta.7 Library Reference",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 192,
			"name": "CLINetworkAdapter",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 203,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 204,
							"name": "new CLINetworkAdapter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 205,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "BlockstackNetwork"
									}
								},
								{
									"id": 206,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "CLI_NETWORK_OPTS"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 58,
							"character": 35
						}
					]
				},
				{
					"id": 193,
					"name": "consensusHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 49,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 194,
					"name": "feeRate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 50,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 198,
					"name": "gracePeriod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 202,
					"name": "legacyNetwork",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 58,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockstackNetwork"
					}
				},
				{
					"id": 195,
					"name": "namespaceBurnAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 51,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 200,
					"name": "nodeAPIUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 201,
					"name": "optAlwaysCoerceAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 57,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 196,
					"name": "priceToPay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 197,
					"name": "priceUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 199,
					"name": "receiveFeesPeriod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 55,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 251,
					"name": "broadcastTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 252,
							"name": "broadcastTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 253,
									"name": "tx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 311,
							"character": 22
						}
					]
				},
				{
					"id": 254,
					"name": "broadcastZoneFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 255,
							"name": "broadcastZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 256,
									"name": "zonefile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 257,
									"name": "txid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 315,
							"character": 19
						}
					]
				},
				{
					"id": 244,
					"name": "coerceAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 245,
							"name": "coerceAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 246,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 303,
							"character": 15
						}
					]
				},
				{
					"id": 214,
					"name": "coerceMainnetAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 215,
							"name": "coerceMainnetAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 216,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 101,
							"character": 22
						}
					]
				},
				{
					"id": 247,
					"name": "getAccountHistoryPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 248,
							"name": "getAccountHistoryPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 249,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 250,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 307,
							"character": 23
						}
					]
				},
				{
					"id": 237,
					"name": "getBlockchainNameRecord",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "getBlockchainNameRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 239,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 248,
							"character": 25
						}
					]
				},
				{
					"id": 219,
					"name": "getConsensusHash",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 220,
							"name": "getConsensusHash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 127,
							"character": 18
						}
					]
				},
				{
					"id": 217,
					"name": "getFeeRate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 218,
							"name": "getFeeRate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 115,
							"character": 12
						}
					]
				},
				{
					"id": 221,
					"name": "getGracePeriod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 222,
							"name": "getGracePeriod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 135,
							"character": 16
						}
					]
				},
				{
					"id": 240,
					"name": "getNameHistory",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 241,
							"name": "getNameHistory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 242,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 243,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Record"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 271,
							"character": 16
						}
					]
				},
				{
					"id": 234,
					"name": "getNameInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "getNameInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 236,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 263,
										"name": "NameInfoType"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 228,
							"character": 13
						}
					]
				},
				{
					"id": 223,
					"name": "getNamePrice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 224,
							"name": "getNamePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 225,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 189,
										"name": "PriceType"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 142,
							"character": 14
						}
					]
				},
				{
					"id": 258,
					"name": "getNamesOwned",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "getNamesOwned",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 260,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 319,
							"character": 15
						}
					]
				},
				{
					"id": 229,
					"name": "getNamespaceBurnAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 230,
							"name": "getNamespaceBurnAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 231,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 232,
									"name": "useCLI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 233,
									"name": "receiveFeesPeriod",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "-1"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 188,
							"character": 25
						}
					]
				},
				{
					"id": 226,
					"name": "getNamespacePrice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "getNamespacePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 228,
									"name": "namespaceID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 189,
										"name": "PriceType"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 165,
							"character": 19
						}
					]
				},
				{
					"id": 207,
					"name": "isMainnet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 208,
							"name": "isMainnet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 89,
							"character": 11
						}
					]
				},
				{
					"id": 209,
					"name": "isTestnet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 210,
							"name": "isTestnet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 93,
							"character": 11
						}
					]
				},
				{
					"id": 211,
					"name": "setCoerceMainnetAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 212,
							"name": "setCoerceMainnetAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 213,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 97,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						203
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						193,
						194,
						198,
						202,
						195,
						200,
						201,
						196,
						197,
						199
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						251,
						254,
						244,
						214,
						247,
						237,
						219,
						217,
						221,
						240,
						234,
						223,
						258,
						229,
						226,
						207,
						209,
						211
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 48,
					"character": 30
				}
			]
		},
		{
			"id": 553,
			"name": "CLITransactionSigner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 556,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 557,
							"name": "new CLITransactionSigner",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 558,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "reference",
								"id": 553,
								"name": "CLITransactionSigner"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 22
						}
					]
				},
				{
					"id": 554,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 555,
					"name": "isComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 559,
					"name": "getAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 560,
							"name": "getAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 64,
							"character": 12
						}
					]
				},
				{
					"id": 561,
					"name": "signTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 562,
							"name": "signTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 563,
									"name": "_txIn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "TransactionBuilder"
									}
								},
								{
									"id": 564,
									"name": "_signingIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 68,
							"character": 17
						}
					]
				},
				{
					"id": 565,
					"name": "signerVersion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 566,
							"name": "signerVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 72,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						556
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						554,
						555
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						559,
						561,
						565
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 55,
					"character": 26
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 567,
					"name": "NullSigner"
				},
				{
					"type": "reference",
					"id": 581,
					"name": "MultiSigKeySigner"
				},
				{
					"type": "reference",
					"id": 599,
					"name": "SegwitP2SHKeySigner"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TransactionSigner"
				}
			]
		},
		{
			"id": 581,
			"name": "MultiSigKeySigner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 585,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 586,
							"name": "new MultiSigKeySigner",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 587,
									"name": "redeemScript",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 588,
									"name": "privateKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 581,
								"name": "MultiSigKeySigner"
							},
							"overwrites": {
								"type": "reference",
								"id": 556,
								"name": "CLITransactionSigner.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 82,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 556,
						"name": "CLITransactionSigner.__constructor"
					}
				},
				{
					"id": 597,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 554,
						"name": "CLITransactionSigner.address"
					}
				},
				{
					"id": 598,
					"name": "isComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 555,
						"name": "CLITransactionSigner.isComplete"
					}
				},
				{
					"id": 584,
					"name": "m",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 82,
							"character": 3
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 583,
					"name": "privateKeys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 81,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 582,
					"name": "redeemScript",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 80,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				},
				{
					"id": 589,
					"name": "getAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "getAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 559,
								"name": "CLITransactionSigner.getAddress"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 104,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 559,
						"name": "CLITransactionSigner.getAddress"
					}
				},
				{
					"id": 591,
					"name": "signTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 592,
							"name": "signTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 593,
									"name": "txIn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "TransactionBuilder"
									}
								},
								{
									"id": 594,
									"name": "signingIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 561,
								"name": "CLITransactionSigner.signTransaction"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 108,
							"character": 17
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 561,
						"name": "CLITransactionSigner.signTransaction"
					}
				},
				{
					"id": 595,
					"name": "signerVersion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 596,
							"name": "signerVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"id": 565,
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 118,
							"character": 15
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 565,
						"name": "CLITransactionSigner.signerVersion"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						585
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						597,
						598,
						584,
						583,
						582
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						589,
						591,
						595
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 79,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 553,
					"name": "CLITransactionSigner"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TransactionSigner"
				}
			]
		},
		{
			"id": 567,
			"name": "NullSigner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 570,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 571,
							"name": "new NullSigner",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 572,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "reference",
								"id": 567,
								"name": "NullSigner"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 556,
								"name": "CLITransactionSigner.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 556,
						"name": "CLITransactionSigner.__constructor"
					}
				},
				{
					"id": 568,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 554,
						"name": "CLITransactionSigner.address"
					}
				},
				{
					"id": 569,
					"name": "isComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 555,
						"name": "CLITransactionSigner.isComplete"
					}
				},
				{
					"id": 573,
					"name": "getAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 574,
							"name": "getAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 559,
								"name": "CLITransactionSigner.getAddress"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 64,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 559,
						"name": "CLITransactionSigner.getAddress"
					}
				},
				{
					"id": 575,
					"name": "signTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 576,
							"name": "signTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 577,
									"name": "_txIn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "TransactionBuilder"
									}
								},
								{
									"id": 578,
									"name": "_signingIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 561,
								"name": "CLITransactionSigner.signTransaction"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 68,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 561,
						"name": "CLITransactionSigner.signTransaction"
					}
				},
				{
					"id": 579,
					"name": "signerVersion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 580,
							"name": "signerVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 565,
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 72,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 565,
						"name": "CLITransactionSigner.signerVersion"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						570
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						568,
						569
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						573,
						575,
						579
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 77,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 553,
					"name": "CLITransactionSigner"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TransactionSigner"
				}
			]
		},
		{
			"id": 625,
			"name": "SafetyError",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 627,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 628,
							"name": "new SafetyError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 629,
									"name": "safetyErrors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 665,
										"name": "AnyJson"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 625,
								"name": "SafetyError"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 211,
							"character": 24
						}
					]
				},
				{
					"id": 631,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 974,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 631,
						"name": "Error.message"
					}
				},
				{
					"id": 630,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 630,
						"name": "Error.name"
					}
				},
				{
					"id": 626,
					"name": "safetyErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 211,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 665,
						"name": "AnyJson"
					}
				},
				{
					"id": 632,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 975,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 632,
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 632,
						"name": "Error.stack"
					}
				},
				{
					"id": 633,
					"name": "Error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 984,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorConstructor"
					},
					"extendedBy": [
						{
							"type": "reference",
							"id": 625,
							"name": "SafetyError"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						627
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						631,
						630,
						626,
						632,
						633
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 210,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 633,
					"name": "Error"
				}
			]
		},
		{
			"id": 599,
			"name": "SegwitP2SHKeySigner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 604,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 605,
							"name": "new SegwitP2SHKeySigner",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 606,
									"name": "redeemScript",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 607,
									"name": "witnessScript",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 608,
									"name": "m",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 609,
									"name": "privateKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 599,
								"name": "SegwitP2SHKeySigner"
							},
							"overwrites": {
								"type": "reference",
								"id": 556,
								"name": "CLITransactionSigner.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 127,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 556,
						"name": "CLITransactionSigner.__constructor"
					}
				},
				{
					"id": 623,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 554,
						"name": "CLITransactionSigner.address"
					}
				},
				{
					"id": 624,
					"name": "isComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 555,
						"name": "CLITransactionSigner.isComplete"
					}
				},
				{
					"id": 603,
					"name": "m",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 127,
							"character": 3
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 602,
					"name": "privateKeys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 126,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 600,
					"name": "redeemScript",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 124,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				},
				{
					"id": 601,
					"name": "witnessScript",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 125,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				},
				{
					"id": 612,
					"name": "findUTXO",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 613,
							"name": "findUTXO",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 614,
									"name": "txIn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "TransactionBuilder"
									}
								},
								{
									"id": 615,
									"name": "signingIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 616,
									"name": "utxos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 548,
											"name": "UTXO"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 548,
								"name": "UTXO"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 147,
							"character": 10
						}
					]
				},
				{
					"id": 610,
					"name": "getAddress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 611,
							"name": "getAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 559,
								"name": "CLITransactionSigner.getAddress"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 143,
							"character": 12
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 559,
						"name": "CLITransactionSigner.getAddress"
					}
				},
				{
					"id": 617,
					"name": "signTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 618,
							"name": "signTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 619,
									"name": "txIn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "TransactionBuilder"
									}
								},
								{
									"id": 620,
									"name": "signingIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 561,
								"name": "CLITransactionSigner.signTransaction"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 168,
							"character": 17
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 561,
						"name": "CLITransactionSigner.signTransaction"
					}
				},
				{
					"id": 621,
					"name": "signerVersion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 622,
							"name": "signerVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"id": 565,
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 205,
							"character": 15
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 565,
						"name": "CLITransactionSigner.signerVersion"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						604
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						623,
						624,
						603,
						602,
						600,
						601
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						612,
						610,
						617,
						621
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 123,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 553,
					"name": "CLITransactionSigner"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TransactionSigner"
				}
			]
		},
		{
			"id": 851,
			"name": "AuthRequestType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 861,
					"name": "do_not_include_profile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 85,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 857,
					"name": "domain_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 81,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 854,
					"name": "exp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 78,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 853,
					"name": "iat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 77,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 855,
					"name": "iss",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 79,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 852,
					"name": "jti",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 76,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 858,
					"name": "manifest_uri",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 82,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 856,
					"name": "public_keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 80,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 859,
					"name": "redirect_uri",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 83,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 863,
					"name": "scopes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 87,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 862,
					"name": "supports_hub_url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 86,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 860,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 84,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						861,
						857,
						854,
						853,
						855,
						852,
						858,
						856,
						859,
						863,
						862,
						860
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 75,
					"character": 25
				}
			]
		},
		{
			"id": 37,
			"name": "CLI_COMMAND_GROUP",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 38,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 39,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 34,
							"name": "CLI_COMMAND_GROUP_ITEM"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2746,
					"character": 27
				}
			]
		},
		{
			"id": 34,
			"name": "CLI_COMMAND_GROUP_ITEM",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 35,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2742,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2743,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						35,
						36
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2741,
					"character": 32
				}
			]
		},
		{
			"id": 31,
			"name": "CLI_COMMAND_HELP",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 33,
					"name": "kw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2689,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32,
					"name": "raw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2688,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						33,
						32
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2687,
					"character": 26
				}
			]
		},
		{
			"id": 8,
			"name": "CLI_CONFIG_TYPE",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 15,
					"name": "bitcoindPassword",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 68,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14,
					"name": "bitcoindUsername",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 67,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9,
					"name": "blockstackAPIUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 62,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "blockstackNodeUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 63,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11,
					"name": "broadcastServiceUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 64,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "logConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 66,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "CLI_LOG_CONFIG_TYPE"
					}
				},
				{
					"id": 12,
					"name": "utxoServiceUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 65,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						15,
						14,
						9,
						10,
						11,
						13,
						12
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 61,
					"character": 32
				}
			]
		},
		{
			"id": 1,
			"name": "CLI_LOG_CONFIG_TYPE",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 6,
					"name": "colorize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 57,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3,
					"name": "handleExceptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 54,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 7,
					"name": "json",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 58,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2,
					"name": "level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 53,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5,
					"name": "stringify",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 56,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 55,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						6,
						3,
						7,
						2,
						5,
						4
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 52,
					"character": 36
				}
			]
		},
		{
			"id": 178,
			"name": "CLI_NETWORK_OPTS",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 186,
					"name": "altAPIUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 187,
					"name": "altTransactionBroadcasterUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 21,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 179,
					"name": "consensusHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 13,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 180,
					"name": "feeRate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 185,
					"name": "gracePeriod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 19,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 181,
					"name": "namespaceBurnAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 15,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 188,
					"name": "nodeAPIUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 22,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 182,
					"name": "priceToPay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 183,
					"name": "priceUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 184,
					"name": "receiveFeesPeriod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 18,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						186,
						187,
						179,
						180,
						185,
						181,
						188,
						182,
						183,
						184
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 12,
					"character": 33
				}
			]
		},
		{
			"id": 40,
			"name": "CLI_OPTS",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 41,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 42,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2908,
					"character": 18
				}
			]
		},
		{
			"id": 21,
			"name": "CLI_PROP",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 22,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 23,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 30,
									"name": "group",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 128,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29,
									"name": "help",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 127,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26,
									"name": "items",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 124,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 16,
											"name": "CLI_PROP_ITEM"
										}
									}
								},
								{
									"id": 28,
									"name": "maxItems",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 126,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 27,
									"name": "minItems",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 125,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 25,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/argparse.ts",
											"line": 123,
											"character": 8
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "array"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										30,
										29,
										26,
										28,
										27,
										25
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 122,
									"character": 18
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 121,
					"character": 18
				}
			]
		},
		{
			"id": 16,
			"name": "CLI_PROP_ITEM",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 17,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 115,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 118,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 19,
					"name": "realtype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 117,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 116,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						17,
						20,
						19,
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 114,
					"character": 23
				}
			]
		},
		{
			"id": 47,
			"name": "CheckArgsFailType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 50,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3113,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 49,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3112,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 48,
					"name": "success",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3111,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "false"
					}
				},
				{
					"id": 51,
					"name": "usage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3114,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						50,
						49,
						48,
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 3110,
					"character": 34
				}
			]
		},
		{
			"id": 43,
			"name": "CheckArgsSuccessType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 46,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3107,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Array"
					}
				},
				{
					"id": 45,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3106,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 44,
					"name": "success",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3105,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						46,
						45,
						44
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 3104,
					"character": 37
				}
			]
		},
		{
			"id": 643,
			"name": "ClarityFunctionArg",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 644,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 793,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 645,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 794,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "ClarityAbiType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						644,
						645
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 792,
					"character": 35
				}
			]
		},
		{
			"id": 634,
			"name": "IDAppKeys",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 636,
					"name": "appPrivateKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 754,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 637,
					"name": "mnemonic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 755,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 635,
					"name": "ownerPrivateKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 753,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						636,
						637,
						635
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 752,
					"character": 26
				}
			]
		},
		{
			"id": 638,
			"name": "InquirerPrompt",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 642,
					"name": "choices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 781,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 641,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 780,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 640,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 779,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 639,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 778,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						642,
						641,
						640,
						639
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 777,
					"character": 24
				}
			]
		},
		{
			"id": 844,
			"name": "NamedIdentityType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 846,
					"name": "idAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 68,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 848,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 70,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 845,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 67,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 847,
					"name": "privateKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 69,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 849,
					"name": "profile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 71,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "Object"
					}
				},
				{
					"id": 850,
					"name": "profileUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 72,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						846,
						848,
						845,
						847,
						849,
						850
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 66,
					"character": 34
				}
			]
		},
		{
			"id": 189,
			"name": "PriceType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 191,
					"name": "amount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 27,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 261,
						"name": "BN"
					}
				},
				{
					"id": 190,
					"name": "units",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 26,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "BTC"
							},
							{
								"type": "stringLiteral",
								"value": "STACKS"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						191,
						190
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 25,
					"character": 26
				}
			]
		},
		{
			"id": 548,
			"name": "UTXO",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 550,
					"name": "confirmations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 50,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 551,
					"name": "tx_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 51,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 552,
					"name": "tx_output_n",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 52,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 549,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 49,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						550,
						551,
						552,
						549
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 48,
					"character": 21
				}
			]
		},
		{
			"id": 280,
			"name": "WhoisInfoType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 281,
					"name": "address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 121,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 283,
					"name": "block_renewed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 123,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 282,
					"name": "blockchain",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 122,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 284,
					"name": "did",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 124,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 285,
					"name": "expire_block",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 125,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 286,
					"name": "grace_period",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 126,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 287,
					"name": "last_transaction_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 127,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 288,
					"name": "last_txid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 128,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 289,
					"name": "owner_address",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 129,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 290,
					"name": "owner_script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 130,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 291,
					"name": "renewal_deadline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 131,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 292,
					"name": "resolver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 132,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 293,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 133,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 294,
					"name": "zonefile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 134,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 295,
					"name": "zonefile_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 135,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						281,
						283,
						282,
						284,
						285,
						286,
						287,
						288,
						289,
						290,
						291,
						292,
						293,
						294,
						295
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 120,
					"character": 30
				}
			]
		},
		{
			"id": 665,
			"name": "AnyJson",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 375,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "null"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 666,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 667,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 668,
											"name": "property",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 665,
										"name": "AnyJson"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 375,
									"character": 49
								}
							]
						}
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 665,
							"name": "AnyJson"
						}
					}
				]
			}
		},
		{
			"id": 490,
			"name": "AppKeyInfoType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 46,
					"character": 26
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 491,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 492,
							"name": "keyInfo",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 493,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 495,
											"name": "address",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 49,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 494,
											"name": "privateKey",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 48,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												495,
												494
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 47,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 496,
							"name": "legacyKeyInfo",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 51,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 497,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 499,
											"name": "address",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 53,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 498,
											"name": "privateKey",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 52,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												499,
												498
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 51,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 500,
							"name": "ownerKeyIndex",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 55,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								492,
								496,
								500
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 46,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 432,
			"name": "CommandFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1511,
					"character": 20
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 433,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 434,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 435,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 192,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 436,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1511,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 416,
			"name": "DocsArgsType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1466,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 417,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 421,
							"name": "format",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 418,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1467,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 419,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1468,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "value",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1469,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								421,
								418,
								419,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1466,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 422,
			"name": "FormattedDocsType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1473,
					"character": 22
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 423,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 425,
							"name": "args",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1475,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 416,
									"name": "DocsArgsType"
								}
							}
						},
						{
							"id": 424,
							"name": "command",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1474,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 427,
							"name": "group",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1477,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 426,
							"name": "usage",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 1476,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								425,
								424,
								427,
								426
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1473,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 263,
			"name": "NameInfoType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 30,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 264,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 265,
							"name": "address",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 31,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 266,
							"name": "blockchain",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 32,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 267,
							"name": "did",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 33,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 268,
							"name": "expire_block",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 269,
							"name": "grace_period",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 270,
							"name": "last_txid",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 271,
							"name": "renewal_deadline",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 37,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 272,
							"name": "resolver",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 38,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 273,
							"name": "status",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 274,
							"name": "zonefile",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 40,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 275,
							"name": "zonefile_hash",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								265,
								266,
								267,
								268,
								269,
								270,
								271,
								272,
								273,
								274,
								275
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 30,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 470,
			"name": "OwnerKeyInfoType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 23,
					"character": 28
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 471,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 475,
							"name": "idAddress",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 474,
							"name": "index",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 26,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 472,
							"name": "privateKey",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 24,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 473,
							"name": "version",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								475,
								474,
								472,
								473
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 23,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 476,
			"name": "PaymentKeyInfoType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 30,
					"character": 30
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 477,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 479,
							"name": "address",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 32,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 480,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 481,
											"name": "BTC",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 33,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 482,
											"name": "STACKS",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 34,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												481,
												482
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 32,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 483,
							"name": "index",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 36,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 478,
							"name": "privateKey",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 31,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								479,
								483,
								478
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 30,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 484,
			"name": "StacksKeyInfoType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 39,
					"character": 29
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 485,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 487,
							"name": "address",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 488,
							"name": "btcAddress",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 42,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 489,
							"name": "index",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 43,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 486,
							"name": "privateKey",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 40,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								487,
								488,
								489,
								486
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 39,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 54,
			"name": "ADDRESS_CHARS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 9,
					"character": 26
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}"
			},
			"defaultValue": "\"[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}\""
		},
		{
			"id": 56,
			"name": "ADDRESS_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 13,
					"character": 28
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`^(${ADDRESS_CHARS})$`"
		},
		{
			"id": 304,
			"name": "BLOCKSTACK_TEST",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 114,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			},
			"defaultValue": "!!process.env.BLOCKSTACK_TEST"
		},
		{
			"id": 261,
			"name": "BN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 3,
					"character": 8
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "require('bn.js')"
		},
		{
			"id": 71,
			"name": "BOOLEAN_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 50,
					"character": 28
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^(0|1|true|false)$"
			},
			"defaultValue": "\"^(0|1|true|false)$\""
		},
		{
			"id": 55,
			"name": "C32_ADDRESS_CHARS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 11,
					"character": 30
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "[0123456789ABCDEFGHJKMNPQRSTVWXYZ]+"
			},
			"defaultValue": "\"[0123456789ABCDEFGHJKMNPQRSTVWXYZ]+\""
		},
		{
			"id": 102,
			"name": "DEFAULT_CONFIG_PATH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 108,
					"character": 32
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "~/.blockstack-cli.conf"
			},
			"defaultValue": "\"~/.blockstack-cli.conf\""
		},
		{
			"id": 103,
			"name": "DEFAULT_CONFIG_REGTEST_PATH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 109,
					"character": 40
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "~/.blockstack-cli-regtest.conf"
			},
			"defaultValue": "\"~/.blockstack-cli-regtest.conf\""
		},
		{
			"id": 104,
			"name": "DEFAULT_CONFIG_TESTNET_PATH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 110,
					"character": 40
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "~/.blockstack-cli-testnet.conf"
			},
			"defaultValue": "\"~/.blockstack-cli-testnet.conf\""
		},
		{
			"id": 105,
			"name": "DEFAULT_MAX_ID_SEARCH_INDEX",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 112,
					"character": 40
				}
			],
			"type": {
				"type": "unknown",
				"name": "256"
			},
			"defaultValue": "256"
		},
		{
			"id": 469,
			"name": "DERIVATION_PATH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 21,
					"character": 28
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "m/44'/5757'/0'/0/0"
			},
			"defaultValue": "\"m/44'/5757'/0'/0/0\""
		},
		{
			"id": 57,
			"name": "ID_ADDRESS_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 15,
					"character": 31
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`^ID-${ADDRESS_CHARS}$`"
		},
		{
			"id": 66,
			"name": "INT_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 40,
					"character": 24
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^-?[0-9]+$"
			},
			"defaultValue": "\"^-?[0-9]+$\""
		},
		{
			"id": 53,
			"name": "NAMESPACE_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 7,
					"character": 30
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-z_-]{1,19})$"
			},
			"defaultValue": "\"^([0-9a-z_-]{1,19})$\""
		},
		{
			"id": 52,
			"name": "NAME_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 5,
					"character": 25
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-z_.+-]{3,37})$"
			},
			"defaultValue": "\"^([0-9a-z_.+-]{3,37})$\""
		},
		{
			"id": 62,
			"name": "PRIVATE_KEY_MULTISIG_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 29,
					"character": 41
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"
			},
			"defaultValue": "\"^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$\""
		},
		{
			"id": 61,
			"name": "PRIVATE_KEY_NOSIGN_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 26,
					"character": 39
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`^nosign:${ADDRESS_CHARS}$`"
		},
		{
			"id": 59,
			"name": "PRIVATE_KEY_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 20,
					"character": 32
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-f]{64,66})$"
			},
			"defaultValue": "\"^([0-9a-f]{64,66})$\""
		},
		{
			"id": 64,
			"name": "PRIVATE_KEY_PATTERN_ANY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 36,
					"character": 36
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`${PRIVATE_KEY_PATTERN}|${PRIVATE_KEY_MULTISIG_PATTERN}|${PRIVATE_KEY_SEGWIT_P2SH_PATTERN}|${PRIVATE_KEY_NOSIGN_PATTERN}`"
		},
		{
			"id": 63,
			"name": "PRIVATE_KEY_SEGWIT_P2SH_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 32,
					"character": 44
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"
			},
			"defaultValue": "\"^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$\""
		},
		{
			"id": 60,
			"name": "PRIVATE_KEY_UNCOMPRESSED_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 23,
					"character": 45
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-f]{64})$"
			},
			"defaultValue": "\"^([0-9a-f]{64})$\""
		},
		{
			"id": 65,
			"name": "PUBLIC_KEY_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 38,
					"character": 31
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-f]{66,130})$"
			},
			"defaultValue": "\"^([0-9a-f]{66,130})$\""
		},
		{
			"id": 93,
			"name": "PUBLIC_TESTNET_HOST",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 98,
					"character": 25
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "testnet-master.blockstack.org"
			},
			"defaultValue": "\"testnet-master.blockstack.org\""
		},
		{
			"id": 262,
			"name": "SATOSHIS_PER_BTC",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 10,
					"character": 22
				}
			],
			"type": {
				"type": "unknown",
				"name": "100000000"
			},
			"defaultValue": "100000000"
		},
		{
			"id": 864,
			"name": "SIGNIN_CSS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 22,
					"character": 23
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "\nh1 { \n  font-family: monospace; \n  font-size: 24px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 26.4px; \n} \nh3 { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 15.4px; \n}\np { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 20px; \n}\nb {\n  background-color: #e8e8e8;\n}\npre { \n  font-family: monospace; \n  font-size: 13px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 18.5714px;\n}"
			},
			"defaultValue": "`\nh1 { \n  font-family: monospace; \n  font-size: 24px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 26.4px; \n} \nh3 { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 15.4px; \n}\np { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 20px; \n}\nb {\n  background-color: #e8e8e8;\n}\npre { \n  font-family: monospace; \n  font-size: 13px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 18.5714px;\n}`"
		},
		{
			"id": 866,
			"name": "SIGNIN_DESC",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 60,
					"character": 24
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "<p>Sign-in request for <b>\"{appName}\"</b></p>"
			},
			"defaultValue": "\"<p>Sign-in request for <b>\"{appName}\"</b></p>\""
		},
		{
			"id": 869,
			"name": "SIGNIN_FMT_ID",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 63,
					"character": 26
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "<p><a href=\"{authRedirect}\">{idAddress}</a> (anonymous)</p>"
			},
			"defaultValue": "\"<p><a href=\"{authRedirect}\">{idAddress}</a> (anonymous)</p>\""
		},
		{
			"id": 868,
			"name": "SIGNIN_FMT_NAME",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 62,
					"character": 28
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "<p><a href=\"{authRedirect}\">{blockstackID}</a> ({idAddress})</p>"
			},
			"defaultValue": "\"<p><a href=\"{authRedirect}\">{blockstackID}</a> ({idAddress})</p>\""
		},
		{
			"id": 870,
			"name": "SIGNIN_FOOTER",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 64,
					"character": 26
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "</body></html>"
			},
			"defaultValue": "\"</body></html>\""
		},
		{
			"id": 865,
			"name": "SIGNIN_HEADER",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 59,
					"character": 26
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`<html><head><style>${SIGNIN_CSS}</style></head></body><h3>Blockstack CLI Sign-in</h3><br>`"
		},
		{
			"id": 867,
			"name": "SIGNIN_SCOPES",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 61,
					"character": 26
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "<p>Requested scopes: <b>\"{appScopes}\"</b></p>"
			},
			"defaultValue": "\"<p>Requested scopes: <b>\"{appScopes}\"</b></p>\""
		},
		{
			"id": 58,
			"name": "STACKS_ADDRESS_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 17,
					"character": 35
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`^(${C32_ADDRESS_CHARS})$`"
		},
		{
			"id": 467,
			"name": "STRENGTH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 19,
					"character": 21
				}
			],
			"type": {
				"type": "unknown",
				"name": "128"
			},
			"defaultValue": "128"
		},
		{
			"id": 468,
			"name": "STX_WALLET_COMPATIBLE_SEED_STRENGTH",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 20,
					"character": 48
				}
			],
			"type": {
				"type": "unknown",
				"name": "256"
			},
			"defaultValue": "256"
		},
		{
			"id": 69,
			"name": "SUBDOMAIN_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 46,
					"character": 30
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-z_+-]{1,37}).([0-9a-z_.+-]{3,37})$"
			},
			"defaultValue": "\"^([0-9a-z_+-]{1,37}).([0-9a-z_.+-]{3,37})$\""
		},
		{
			"id": 70,
			"name": "TXID_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 48,
					"character": 25
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-f]{64})$"
			},
			"defaultValue": "\"^([0-9a-f]{64})$\""
		},
		{
			"id": 68,
			"name": "URL_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 44,
					"character": 24
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^http[s]?://.+$"
			},
			"defaultValue": "\"^http[s]?://.+$\""
		},
		{
			"id": 111,
			"name": "USAGE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2575,
					"character": 18
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "`Usage: ${process.argv[1]} [options] command [command arguments]\nOptions can be:\n    -c                  Path to a config file (defaults to\n                        ${DEFAULT_CONFIG_PATH})\n\n    -d                  Print verbose debugging output\n\n    -e                  Estimate the BTC cost of an transaction (in satoshis).\n                        Do not generate or send any transactions.\n\n    -m MAGIC_BYTES      Use an alternative magic byte string instead of \"id\".\n\n    -t                  Use the public testnet instead of mainnet.\n\n    -i                  Use integration test framework instead of mainnet.\n\n    -U                  Unsafe mode.  No safety checks will be performed.\n\n    -x                  Do not broadcast a transaction.  Only generate and\n                        print them to stdout.\n\n    -B BURN_ADDR        Use the given namespace burn address instead of the one\n                        obtained from the Blockstack network (DANGEROUS)\n\n    -D DENOMINATION     Denominate the price to pay in the given units\n                        (DANGEROUS)\n\n    -C CONSENSUS_HASH   Use the given consensus hash instead of one obtained\n                        from the network\n\n    -F FEE_RATE         Use the given transaction fee rate instead of the one\n                        obtained from the Bitcoin network\n\n    -G GRACE_PERIOD     Number of blocks in which a name can be renewed after it\n                        expires (DANGEROUS)\n\n    -H URL              Use an alternative Blockstack Core API endpoint.\n\n    -I URL              Use an alternative Blockstack Core Indexer endpoint.\n\n    -M MAX_INDEX        Maximum keychain index to use when searching for an identity address\n                        (default is ${DEFAULT_MAX_ID_SEARCH_INDEX}).\n\n    -N PAY2NS_PERIOD    Number of blocks in which a namespace receives the registration\n                        and renewal fees after it is created (DANGEROUS)\n\n    -P PRICE            Use the given price to pay for names or namespaces\n                        (DANGEROUS)\n\n    -T URL              Use an alternative Blockstack transaction broadcaster.\n    \n    -X URL              Use an alternative UTXO service endpoint.\n\n    -u USERNAME         A username to be passed to bitcoind RPC endpoints\n\n    -p PASSWORD         A password to be passed to bitcoind RPC endpoints\n`"
		},
		{
			"id": 67,
			"name": "ZONEFILE_HASH_PATTERN",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 42,
					"character": 34
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "^([0-9a-f]{40})$"
			},
			"defaultValue": "\"^([0-9a-f]{40})$\""
		},
		{
			"id": 646,
			"name": "ZoneFile",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 30,
					"character": 14
				},
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 6,
					"character": 14
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "require('zone-file')"
		},
		{
			"id": 871,
			"name": "authTransitNonce",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 91,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "crypto.randomBytes(32).toString('hex')"
		},
		{
			"id": 296,
			"name": "c32check",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 41,
					"character": 14
				},
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 8,
					"character": 14
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "require('c32check')"
		},
		{
			"id": 298,
			"name": "estimateOnly",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 107,
					"character": 16
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			},
			"defaultValue": "false"
		},
		{
			"id": 958,
			"name": "global",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/index.ts",
					"line": 11,
					"character": 18
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 301,
			"name": "gracePeriod",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 110,
					"character": 15
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "5000"
		},
		{
			"id": 957,
			"name": "localStorageRAM",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/index.ts",
					"line": 8,
					"character": 21
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				],
				"name": "Record"
			}
		},
		{
			"id": 303,
			"name": "maxIDSearchIndex",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 112,
					"character": 20
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "DEFAULT_MAX_ID_SEARCH_INDEX"
		},
		{
			"id": 302,
			"name": "noExit",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 111,
					"character": 10
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			},
			"defaultValue": "false"
		},
		{
			"id": 300,
			"name": "receiveFeesPeriod",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 109,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "52595"
		},
		{
			"id": 299,
			"name": "safetyChecks",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 108,
					"character": 16
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			},
			"defaultValue": "true"
		},
		{
			"id": 297,
			"name": "txOnly",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 106,
					"character": 10
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			},
			"defaultValue": "false"
		},
		{
			"id": 465,
			"name": "CLIMain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 466,
					"name": "CLIMain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1555,
					"character": 23
				}
			]
		},
		{
			"id": 142,
			"name": "CLIOptAsBool",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 143,
					"name": "CLIOptAsBool",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 144,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 40,
								"name": "CLI_OPTS"
							}
						},
						{
							"id": 145,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2979,
					"character": 28
				}
			]
		},
		{
			"id": 138,
			"name": "CLIOptAsString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 139,
					"name": "CLIOptAsString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 140,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 40,
								"name": "CLI_OPTS"
							}
						},
						{
							"id": 141,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2969,
					"character": 30
				}
			]
		},
		{
			"id": 149,
			"name": "CLIOptAsStringArray",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 150,
					"name": "CLIOptAsStringArray",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 151,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 40,
								"name": "CLI_OPTS"
							}
						},
						{
							"id": 152,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2997,
					"character": 35
				}
			]
		},
		{
			"id": 669,
			"name": "JSONStringify",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 670,
					"name": "JSONStringify",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 671,
							"name": "obj",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 665,
								"name": "AnyJson"
							}
						},
						{
							"id": 672,
							"name": "stderr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 382,
					"character": 29
				}
			]
		},
		{
			"id": 400,
			"name": "addressConvert",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 401,
					"name": "addressConvert",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 402,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 403,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1283,
					"character": 23
				}
			]
		},
		{
			"id": 779,
			"name": "answerToClarityValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 780,
					"name": "answerToClarityValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 781,
							"name": "answer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 782,
							"name": "arg",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 643,
								"name": "ClarityFunctionArg"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ClarityValue"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 862,
					"character": 36
				}
			]
		},
		{
			"id": 772,
			"name": "argToPrompt",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 773,
					"name": "argToPrompt",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 774,
							"name": "arg",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 643,
								"name": "ClarityFunctionArg"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 638,
						"name": "InquirerPrompt"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 797,
					"character": 27
				}
			]
		},
		{
			"id": 404,
			"name": "authDaemon",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 405,
					"name": "authDaemon",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 406,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 407,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1335,
					"character": 19
				}
			]
		},
		{
			"id": 339,
			"name": "balance",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 340,
					"name": "balance",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 341,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 342,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 348,
					"character": 16
				}
			]
		},
		{
			"id": 383,
			"name": "batchify",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 384,
					"name": "batchify",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 385,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 386,
							"name": "input",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 387,
							"name": "batchSize",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "50"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 972,
					"character": 17
				}
			]
		},
		{
			"id": 710,
			"name": "broadcastTransactionAndZoneFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 711,
					"name": "broadcastTransactionAndZoneFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 712,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 713,
							"name": "tx",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 714,
							"name": "zonefile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 715,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 717,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 529,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"Failed to broadcast zone file\""
												},
												{
													"id": 716,
													"name": "status",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 528,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "false"
													},
													"defaultValue": "false"
												},
												{
													"id": 718,
													"name": "txid",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 530,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "txid"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														717,
														716,
														718
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 719,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 720,
													"name": "status",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 534,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "true"
													},
													"defaultValue": "true"
												},
												{
													"id": 721,
													"name": "txid",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 535,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "txid"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														720,
														721
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 722,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 724,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 542,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"Caught exception sending transaction or zone file\""
												},
												{
													"id": 725,
													"name": "message",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 543,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": "e.message"
												},
												{
													"id": 726,
													"name": "stacktrace",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 544,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": "e.stack"
												},
												{
													"id": 723,
													"name": "status",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 541,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "false"
													},
													"defaultValue": "false"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														724,
														725,
														726,
														723
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 507,
					"character": 53
				}
			]
		},
		{
			"id": 683,
			"name": "canonicalPrivateKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 684,
					"name": "canonicalPrivateKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 685,
							"name": "privkey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 428,
					"character": 35
				}
			]
		},
		{
			"id": 163,
			"name": "checkArgs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 164,
					"name": "checkArgs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 165,
							"name": "argList",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Array"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 43,
								"name": "CheckArgsSuccessType"
							},
							{
								"type": "reference",
								"id": 47,
								"name": "CheckArgsFailType"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 3117,
					"character": 25
				}
			]
		},
		{
			"id": 692,
			"name": "checkUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 693,
					"name": "checkUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 694,
							"name": "url",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 454,
					"character": 24
				}
			]
		},
		{
			"id": 351,
			"name": "contractDeploy",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 352,
					"name": "contractDeploy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 353,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 354,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 582,
					"character": 29
				}
			]
		},
		{
			"id": 355,
			"name": "contractFunctionCall",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 356,
					"name": "contractFunctionCall",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 357,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 358,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 642,
					"character": 35
				}
			]
		},
		{
			"id": 662,
			"name": "decodePrivateKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 663,
					"name": "decodePrivateKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 664,
							"name": "serializedPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 553,
								"name": "CLITransactionSigner"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 347,
					"character": 32
				}
			]
		},
		{
			"id": 174,
			"name": "decryptBackupPhrase",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 175,
					"name": "decryptBackupPhrase",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 176,
							"name": "dataBuffer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						},
						{
							"id": 177,
							"name": "password",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/encrypt.ts",
					"line": 7,
					"character": 35
				}
			]
		},
		{
			"id": 412,
			"name": "decryptMnemonic",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 413,
					"name": "decryptMnemonic",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 414,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 415,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1434,
					"character": 24
				}
			]
		},
		{
			"id": 170,
			"name": "encryptBackupPhrase",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 171,
					"name": "encryptBackupPhrase",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 172,
							"name": "plaintextBuffer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "password",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Buffer"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/encrypt.ts",
					"line": 3,
					"character": 35
				}
			]
		},
		{
			"id": 408,
			"name": "encryptMnemonic",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 409,
					"name": "encryptMnemonic",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 410,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 411,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1387,
					"character": 24
				}
			]
		},
		{
			"id": 534,
			"name": "extractAppKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 535,
					"name": "extractAppKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 536,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 537,
							"name": "appKeyInfo",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 538,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 539,
											"name": "keyInfo",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 266,
													"character": 11
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 540,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 542,
															"name": "address",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 266,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 541,
															"name": "privateKey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 266,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																542,
																541
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 266,
															"character": 12
														}
													]
												}
											}
										},
										{
											"id": 543,
											"name": "legacyKeyInfo",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 267,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 544,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 546,
															"name": "address",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 267,
																	"character": 48
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 545,
															"name": "privateKey",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 267,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																546,
																545
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 267,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												539,
												543
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 265,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 547,
							"name": "appAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 263,
					"character": 29
				}
			]
		},
		{
			"id": 521,
			"name": "findIdentityIndex",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 522,
					"name": "findIdentityIndex",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 523,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 524,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 525,
							"name": "idAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 526,
							"name": "maxIndex",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 173,
					"character": 39
				}
			]
		},
		{
			"id": 117,
			"name": "formatCommandHelpLines",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 118,
					"name": "formatCommandHelpLines",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 119,
							"name": "commandName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 120,
							"name": "commandArgs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 16,
										"name": "CLI_PROP_ITEM"
									}
								],
								"name": "Array"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 31,
						"name": "CLI_COMMAND_HELP"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2692,
					"character": 31
				}
			]
		},
		{
			"id": 112,
			"name": "formatHelpString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 113,
					"name": "formatHelpString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 114,
							"name": "indent",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 115,
							"name": "limit",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 116,
							"name": "helpString",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2636,
					"character": 25
				}
			]
		},
		{
			"id": 796,
			"name": "gaiaAuth",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 797,
					"name": "gaiaAuth",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 798,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 799,
							"name": "appPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 800,
							"name": "hubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 801,
							"name": "ownerPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "UserData"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 85,
					"character": 24
				}
			]
		},
		{
			"id": 802,
			"name": "gaiaConnect",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 803,
					"name": "gaiaConnect",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 804,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 805,
							"name": "gaiaHubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 806,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 807,
							"name": "ownerPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 114,
					"character": 27
				}
			]
		},
		{
			"id": 375,
			"name": "gaiaDeleteFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 376,
					"name": "gaiaDeleteFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 377,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 378,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 920,
					"character": 23
				}
			]
		},
		{
			"id": 388,
			"name": "gaiaDumpBucket",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 389,
					"name": "gaiaDumpBucket",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 390,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 391,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 997,
					"character": 23
				}
			]
		},
		{
			"id": 808,
			"name": "gaiaFindProfileName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 809,
					"name": "gaiaFindProfileName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 810,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 811,
							"name": "hubConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						},
						{
							"id": 812,
							"name": "blockstackID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 158,
					"character": 28
				}
			]
		},
		{
			"id": 367,
			"name": "gaiaGetFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 368,
					"name": "gaiaGetFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 369,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 370,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 831,
					"character": 20
				}
			]
		},
		{
			"id": 379,
			"name": "gaiaListFiles",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 380,
					"name": "gaiaListFiles",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 381,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 382,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 949,
					"character": 22
				}
			]
		},
		{
			"id": 371,
			"name": "gaiaPutFile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 372,
					"name": "gaiaPutFile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 373,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 374,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 882,
					"character": 20
				}
			]
		},
		{
			"id": 392,
			"name": "gaiaRestoreBucket",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 393,
					"name": "gaiaRestoreBucket",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 394,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 395,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1099,
					"character": 26
				}
			]
		},
		{
			"id": 396,
			"name": "gaiaSetHub",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 397,
					"name": "gaiaSetHub",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 398,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 399,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1160,
					"character": 25
				}
			]
		},
		{
			"id": 813,
			"name": "gaiaUploadProfile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 814,
					"name": "gaiaUploadProfile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 815,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 816,
							"name": "gaiaHubURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 817,
							"name": "gaiaData",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 818,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 819,
							"name": "blockstackID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 220,
					"character": 33
				}
			]
		},
		{
			"id": 820,
			"name": "gaiaUploadProfileAll",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 821,
					"name": "gaiaUploadProfileAll",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 822,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 823,
							"name": "gaiaUrls",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 824,
							"name": "gaiaData",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 825,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 826,
							"name": "blockstackID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 827,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 828,
											"name": "dataUrls",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/data.ts",
													"line": 256,
													"character": 21
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 829,
											"name": "error",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/data.ts",
													"line": 256,
													"character": 46
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												828,
												829
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/data.ts",
											"line": 256,
											"character": 11
										}
									]
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 250,
					"character": 36
				}
			]
		},
		{
			"id": 783,
			"name": "generateExplorerTxPageUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 784,
					"name": "generateExplorerTxPageUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 785,
							"name": "txid",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 786,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 893,
					"character": 41
				}
			]
		},
		{
			"id": 343,
			"name": "getAccountHistory",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 344,
					"name": "getAccountHistory",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 345,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 346,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 382,
					"character": 26
				}
			]
		},
		{
			"id": 319,
			"name": "getAppKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 320,
					"name": "getAppKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 321,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 322,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 261,
					"character": 25
				}
			]
		},
		{
			"id": 872,
			"name": "getAppPrivateKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 873,
					"name": "getAppPrivateKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 874,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 875,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 876,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 844,
								"name": "NamedIdentityType"
							}
						},
						{
							"id": 877,
							"name": "appOrigin",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 96,
					"character": 31
				}
			]
		},
		{
			"id": 527,
			"name": "getApplicationKeyInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 528,
					"name": "getApplicationKeyInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 529,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 530,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 531,
							"name": "idAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 532,
							"name": "appDomain",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 533,
							"name": "idIndex",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 490,
								"name": "AppKeyInfoType"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 215,
					"character": 43
				}
			]
		},
		{
			"id": 747,
			"name": "getBackupPhrase",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 748,
					"name": "getBackupPhrase",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 749,
							"name": "backupPhraseOrCiphertext",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 750,
							"name": "password",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 656,
					"character": 37
				}
			]
		},
		{
			"id": 134,
			"name": "getCLIOpts",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 135,
					"name": "getCLIOpts",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 136,
							"name": "argv",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 137,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"deitUxC:F:B:P:D:G:N:H:T:I:m:M:X:u:p:\""
						}
					],
					"type": {
						"type": "reference",
						"id": 40,
						"name": "CLI_OPTS"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2912,
					"character": 26
				}
			]
		},
		{
			"id": 153,
			"name": "getCommandArgs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 154,
					"name": "getCommandArgs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 155,
							"name": "command",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "argsList",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Array"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 157,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 159,
											"name": "error",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/argparse.ts",
													"line": 3032,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "`duplicate argument ${argsList[i]}`"
										},
										{
											"id": 158,
											"name": "status",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/argparse.ts",
													"line": 3031,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												159,
												158
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 160,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 162,
											"name": "arguments",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/argparse.ts",
													"line": 3097,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "mergedArgs"
										},
										{
											"id": 161,
											"name": "status",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/argparse.ts",
													"line": 3096,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												162,
												161
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 3012,
					"character": 30
				}
			]
		},
		{
			"id": 121,
			"name": "getCommandGroups",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 122,
					"name": "getCommandGroups",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 37,
						"name": "CLI_COMMAND_GROUP"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2750,
					"character": 25
				}
			]
		},
		{
			"id": 839,
			"name": "getGaiaAddressFromProfile",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 840,
					"name": "getGaiaAddressFromProfile",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 841,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 842,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 843,
							"name": "appOrigin",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 342,
					"character": 41
				}
			]
		},
		{
			"id": 836,
			"name": "getGaiaAddressFromURL",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 837,
					"name": "getGaiaAddressFromURL",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 838,
							"name": "appUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 329,
					"character": 37
				}
			]
		},
		{
			"id": 754,
			"name": "getIDAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 755,
					"name": "getIDAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 756,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 757,
							"name": "nameOrIDAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 715,
					"character": 34
				}
			]
		},
		{
			"id": 763,
			"name": "getIDAppKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 764,
					"name": "getIDAppKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 765,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 766,
							"name": "nameOrIDAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 767,
							"name": "appOrigin",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 768,
							"name": "mnemonicOrCiphertext",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 634,
								"name": "IDAppKeys"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 758,
					"character": 34
				}
			]
		},
		{
			"id": 915,
			"name": "getIdentityInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 916,
					"name": "getIdentityInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 917,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 918,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 919,
							"name": "_appGaiaHub",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 920,
							"name": "_profileGaiaHub",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 844,
									"name": "NamedIdentityType"
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 304,
					"character": 30
				}
			]
		},
		{
			"id": 363,
			"name": "getKeyAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 364,
					"name": "getKeyAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 365,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 366,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 809,
					"character": 22
				}
			]
		},
		{
			"id": 305,
			"name": "getMaxIDSearchIndex",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 306,
					"name": "getMaxIDSearchIndex",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 116,
					"character": 35
				}
			]
		},
		{
			"id": 727,
			"name": "getNameInfoEasy",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 728,
					"name": "getNameInfoEasy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 729,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 730,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 263,
										"name": "NameInfoType"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 552,
					"character": 31
				}
			]
		},
		{
			"id": 276,
			"name": "getNetwork",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 277,
					"name": "getNetwork",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 278,
							"name": "configData",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 8,
								"name": "CLI_CONFIG_TYPE"
							}
						},
						{
							"id": 279,
							"name": "regTest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockstackNetwork"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/network.ts",
					"line": 327,
					"character": 26
				}
			]
		},
		{
			"id": 504,
			"name": "getNodePrivateKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 505,
					"name": "getNodePrivateKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 506,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "BIP32Interface"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 63,
					"character": 26
				}
			]
		},
		{
			"id": 758,
			"name": "getOwnerKeyFromIDAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 759,
					"name": "getOwnerKeyFromIDAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 760,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 761,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 762,
							"name": "idAddress",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 732,
					"character": 46
				}
			]
		},
		{
			"id": 507,
			"name": "getOwnerKeyInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 508,
					"name": "getOwnerKeyInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 509,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 510,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 511,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 512,
							"name": "version",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"v0.10-current\""
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 470,
								"name": "OwnerKeyInfoType"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 79,
					"character": 37
				}
			]
		},
		{
			"id": 323,
			"name": "getOwnerKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 324,
					"name": "getOwnerKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 325,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 326,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 276,
					"character": 27
				}
			]
		},
		{
			"id": 327,
			"name": "getPaymentKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 328,
					"name": "getPaymentKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 329,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 330,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 296,
					"character": 28
				}
			]
		},
		{
			"id": 513,
			"name": "getPaymentKeyInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 514,
					"name": "getPaymentKeyInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 515,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 516,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 476,
								"name": "PaymentKeyInfoType"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 106,
					"character": 39
				}
			]
		},
		{
			"id": 676,
			"name": "getPrivateKeyAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 677,
					"name": "getPrivateKeyAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 678,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 679,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 553,
										"name": "CLITransactionSigner"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 403,
					"character": 36
				}
			]
		},
		{
			"id": 673,
			"name": "getPublicKeyFromPrivateKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 674,
					"name": "getPublicKeyFromPrivateKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 675,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 394,
					"character": 42
				}
			]
		},
		{
			"id": 331,
			"name": "getStacksWalletKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 332,
					"name": "getStacksWalletKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 333,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 334,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 310,
					"character": 33
				}
			]
		},
		{
			"id": 517,
			"name": "getStacksWalletKeyInfo",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 518,
					"name": "getStacksWalletKeyInfo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 519,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 520,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 484,
								"name": "StacksKeyInfoType"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 133,
					"character": 44
				}
			]
		},
		{
			"id": 740,
			"name": "getpass",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 741,
					"name": "getpass",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 742,
							"name": "promptStr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 743,
							"name": "cb",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 744,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 745,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 746,
													"name": "passwd",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/utils.ts",
											"line": 628,
											"character": 46
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 628,
					"character": 23
				}
			]
		},
		{
			"id": 921,
			"name": "handleAuth",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 922,
					"name": "handleAuth",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 923,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 924,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 925,
							"name": "gaiaHubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 926,
							"name": "profileGaiaHub",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 927,
							"name": "port",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 928,
							"name": "req",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "express.Request"
							}
						},
						{
							"id": 929,
							"name": "res",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "express.Response"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 365,
					"character": 32
				}
			]
		},
		{
			"id": 949,
			"name": "handleSignIn",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 950,
					"name": "handleSignIn",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 951,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 952,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 953,
							"name": "appGaiaHub",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 954,
							"name": "profileGaiaHub",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 955,
							"name": "req",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "express.Request"
							}
						},
						{
							"id": 956,
							"name": "res",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "express.Response"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 588,
					"character": 34
				}
			]
		},
		{
			"id": 650,
			"name": "hasKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 651,
					"name": "hasKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 652,
							"name": "signer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 553,
										"name": "CLITransactionSigner"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 224,
					"character": 23
				}
			]
		},
		{
			"id": 689,
			"name": "hash160",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 690,
					"name": "hash160",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 691,
							"name": "buff",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 446,
					"character": 23
				}
			]
		},
		{
			"id": 647,
			"name": "isCLITransactionSigner",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 648,
					"name": "isCLITransactionSigner",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 649,
							"name": "signer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 553,
										"name": "CLITransactionSigner"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "signer",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "CLITransactionSigner"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 218,
					"character": 31
				}
			]
		},
		{
			"id": 146,
			"name": "isStringArray",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 147,
					"name": "isStringArray",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 148,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2987,
					"character": 22
				}
			]
		},
		{
			"id": 680,
			"name": "isSubdomain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 681,
					"name": "isSubdomain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 682,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 420,
					"character": 27
				}
			]
		},
		{
			"id": 166,
			"name": "loadConfig",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 167,
					"name": "loadConfig",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Load the config file and return a config dict.\nIf no config file exists, then return the default config.",
						"tags": [
							{
								"tag": "configpath",
								"text": "(string) the path to the config file."
							},
							{
								"tag": "networktype",
								"text": "(sring) 'mainnet', 'regtest', or 'testnet'\n"
							}
						]
					},
					"parameters": [
						{
							"id": 168,
							"name": "configFile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 169,
							"name": "networkType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 8,
						"name": "CLI_CONFIG_TYPE"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 3201,
					"character": 26
				}
			]
		},
		{
			"id": 901,
			"name": "loadNamedIdentities",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 902,
					"name": "loadNamedIdentities",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 903,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 904,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 844,
										"name": "NamedIdentityType"
									}
								],
								"name": "Array"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 261,
					"character": 35
				}
			]
		},
		{
			"id": 895,
			"name": "loadNamedIdentitiesLoop",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 896,
					"name": "loadNamedIdentitiesLoop",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 897,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 898,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 899,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 900,
							"name": "identities",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 844,
									"name": "NamedIdentityType"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 844,
									"name": "NamedIdentityType"
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 226,
					"character": 38
				}
			]
		},
		{
			"id": 905,
			"name": "loadUnnamedIdentity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 906,
					"name": "loadUnnamedIdentity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 907,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 908,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 909,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 844,
								"name": "NamedIdentityType"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 271,
					"character": 34
				}
			]
		},
		{
			"id": 125,
			"name": "makeAllCommandsHelp",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 126,
					"name": "makeAllCommandsHelp",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2808,
					"character": 35
				}
			]
		},
		{
			"id": 123,
			"name": "makeAllCommandsList",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 124,
					"name": "makeAllCommandsList",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2777,
					"character": 35
				}
			]
		},
		{
			"id": 792,
			"name": "makeAssociationToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 793,
					"name": "makeAssociationToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 794,
							"name": "appPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 795,
							"name": "identityKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 63,
					"character": 36
				}
			]
		},
		{
			"id": 886,
			"name": "makeAuthPage",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 887,
					"name": "makeAuthPage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 888,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 889,
							"name": "authPort",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 890,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 891,
							"name": "hubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 892,
							"name": "manifest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 893,
							"name": "authRequest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 851,
								"name": "AuthRequestType"
							}
						},
						{
							"id": 894,
							"name": "ids",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 844,
										"name": "NamedIdentityType"
									}
								],
								"name": "Array"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 180,
					"character": 27
				}
			]
		},
		{
			"id": 127,
			"name": "makeCommandUsageString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 128,
					"name": "makeCommandUsageString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 129,
							"name": "command",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2831,
					"character": 38
				}
			]
		},
		{
			"id": 699,
			"name": "makeDIDConfiguration",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 700,
					"name": "makeDIDConfiguration",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 701,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 702,
							"name": "blockstackID",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 703,
							"name": "domain",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 704,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 705,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 706,
											"name": "entries",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 482,
													"character": 20
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 707,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExported": true
														},
														"children": [
															{
																"id": 708,
																"name": "did",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "packages/cli/src/utils.ts",
																		"line": 482,
																		"character": 27
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 709,
																"name": "jwt",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "packages/cli/src/utils.ts",
																		"line": 482,
																		"character": 40
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Variables",
																"kind": 32,
																"children": [
																	708,
																	709
																]
															}
														],
														"sources": [
															{
																"fileName": "packages/cli/src/utils.ts",
																"line": 482,
																"character": 21
															}
														]
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												706
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/utils.ts",
											"line": 482,
											"character": 11
										}
									]
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 477,
					"character": 42
				}
			]
		},
		{
			"id": 787,
			"name": "makeFakeAuthResponseToken",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 788,
					"name": "makeFakeAuthResponseToken",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 789,
							"name": "appPrivateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 790,
							"name": "hubURL",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 791,
							"name": "associationToken",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 27,
					"character": 34
				}
			]
		},
		{
			"id": 335,
			"name": "makeKeychain",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 336,
					"name": "makeKeychain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 337,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 338,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 324,
					"character": 27
				}
			]
		},
		{
			"id": 695,
			"name": "makeProfileJWT",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 696,
					"name": "makeProfileJWT",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 697,
							"name": "profileData",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 698,
							"name": "privateKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 470,
					"character": 30
				}
			]
		},
		{
			"id": 769,
			"name": "makePromptsFromArgList",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 770,
					"name": "makePromptsFromArgList",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 771,
							"name": "expectedArgs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 643,
									"name": "ClarityFunctionArg"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 638,
							"name": "InquirerPrompt"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 784,
					"character": 38
				}
			]
		},
		{
			"id": 878,
			"name": "makeSignInLink",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 879,
					"name": "makeSignInLink",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 880,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 881,
							"name": "authPort",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 882,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 883,
							"name": "authRequest",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 851,
								"name": "AuthRequestType"
							}
						},
						{
							"id": 884,
							"name": "hubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 885,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 844,
								"name": "NamedIdentityType"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 123,
					"character": 29
				}
			]
		},
		{
			"id": 130,
			"name": "makeUsageString",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 131,
					"name": "makeUsageString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2862,
					"character": 31
				}
			]
		},
		{
			"id": 830,
			"name": "makeZoneFileFromGaiaUrl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 831,
					"name": "makeZoneFileFromGaiaUrl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 832,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 833,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 834,
							"name": "gaiaHubUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 835,
							"name": "ownerKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/data.ts",
					"line": 295,
					"character": 39
				}
			]
		},
		{
			"id": 751,
			"name": "mkdirs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 752,
					"name": "mkdirs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 753,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 684,
					"character": 22
				}
			]
		},
		{
			"id": 731,
			"name": "nameLookup",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 732,
					"name": "nameLookup",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 733,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 734,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 735,
							"name": "includeProfile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 736,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 737,
											"name": "profile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 578,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 738,
											"name": "profileUrl",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 578,
													"character": 37
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 739,
											"name": "zonefile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 578,
													"character": 56
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												737,
												738,
												739
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/utils.ts",
											"line": 578,
											"character": 11
										}
									]
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 574,
					"character": 32
				}
			]
		},
		{
			"id": 775,
			"name": "parseClarityFunctionArgAnswers",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 776,
					"name": "parseClarityFunctionArgAnswers",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 777,
							"name": "answers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 778,
							"name": "expectedArgs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 643,
									"name": "ClarityFunctionArg"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ClarityValue"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 849,
					"character": 46
				}
			]
		},
		{
			"id": 656,
			"name": "parseMultiSigKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 657,
					"name": "parseMultiSigKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 658,
							"name": "serializedPrivateKeys",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 581,
						"name": "MultiSigKeySigner"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 253,
					"character": 33
				}
			]
		},
		{
			"id": 653,
			"name": "parseNullSigner",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 654,
					"name": "parseNullSigner",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 655,
							"name": "addrString",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 567,
						"name": "NullSigner"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 238,
					"character": 31
				}
			]
		},
		{
			"id": 659,
			"name": "parseSegwitP2SHKeys",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 660,
					"name": "parseSegwitP2SHKeys",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 661,
							"name": "serializedPrivateKeys",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 599,
						"name": "SegwitP2SHKeySigner"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 291,
					"character": 35
				}
			]
		},
		{
			"id": 428,
			"name": "printDocs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 429,
					"name": "printDocs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 430,
							"name": "_network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 431,
							"name": "_args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1480,
					"character": 18
				}
			]
		},
		{
			"id": 132,
			"name": "printUsage",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 133,
					"name": "printUsage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 2897,
					"character": 26
				}
			]
		},
		{
			"id": 307,
			"name": "profileSign",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 308,
					"name": "profileSign",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 309,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 310,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 145,
					"character": 20
				}
			]
		},
		{
			"id": 315,
			"name": "profileStore",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 316,
					"name": "profileStore",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 317,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 318,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 199,
					"character": 21
				}
			]
		},
		{
			"id": 311,
			"name": "profileVerify",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 312,
					"name": "profileVerify",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 313,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 314,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 156,
					"character": 22
				}
			]
		},
		{
			"id": 359,
			"name": "readOnlyContractFunctionCall",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 360,
					"name": "readOnlyContractFunctionCall",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 361,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 362,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 726,
					"character": 43
				}
			]
		},
		{
			"id": 910,
			"name": "sendJSON",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 911,
					"name": "sendJSON",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 912,
							"name": "res",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "express.Response"
							}
						},
						{
							"id": 913,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 914,
							"name": "statusCode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 291,
					"character": 17
				}
			]
		},
		{
			"id": 347,
			"name": "sendTokens",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 348,
					"name": "sendTokens",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 349,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 350,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 519,
					"character": 25
				}
			]
		},
		{
			"id": 686,
			"name": "sumUTXOs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 687,
					"name": "sumUTXOs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 688,
							"name": "utxos",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 548,
									"name": "UTXO"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/utils.ts",
					"line": 439,
					"character": 24
				}
			]
		},
		{
			"id": 940,
			"name": "updateProfileAPISettings",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 941,
					"name": "updateProfileAPISettings",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 942,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 943,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 844,
								"name": "NamedIdentityType"
							}
						},
						{
							"id": 944,
							"name": "appGaiaConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						},
						{
							"id": 945,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 946,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 948,
											"name": "changed",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/auth.ts",
													"line": 511,
													"character": 34
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 947,
											"name": "profile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/auth.ts",
													"line": 511,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												948,
												947
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/auth.ts",
											"line": 511,
											"character": 11
										}
									]
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 506,
					"character": 33
				}
			]
		},
		{
			"id": 930,
			"name": "updateProfileApps",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 931,
					"name": "updateProfileApps",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 932,
							"name": "network",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "CLINetworkAdapter"
							}
						},
						{
							"id": 933,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 844,
								"name": "NamedIdentityType"
							}
						},
						{
							"id": 934,
							"name": "appOrigin",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 935,
							"name": "appGaiaConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						},
						{
							"id": 936,
							"name": "profile",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 937,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 939,
											"name": "changed",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/auth.ts",
													"line": 442,
													"character": 34
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 938,
											"name": "profile",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/auth.ts",
													"line": 442,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												939,
												938
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/cli/src/auth.ts",
											"line": 442,
											"character": 11
										}
									]
								}
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/auth.ts",
					"line": 436,
					"character": 26
				}
			]
		},
		{
			"id": 501,
			"name": "walletFromMnemonic",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 502,
					"name": "walletFromMnemonic",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 503,
							"name": "mnemonic",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BlockstackWallet"
							}
						],
						"name": "Promise"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/keys.ts",
					"line": 58,
					"character": 33
				}
			]
		},
		{
			"id": 106,
			"name": "CLI_ARGS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 109,
					"name": "additionalProperties",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2570,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 108,
					"name": "properties",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 135,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 21,
						"name": "CLI_PROP"
					},
					"defaultValue": "{\n    announce: {\n      type: 'array',\n      items: [\n        {\n          name: 'message_hash',\n          type: 'string',\n          realtype: 'zonefile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Broadcast a message on the blockchain for subscribers to read.  ' +\n        'The `MESSAGE_HASH` argument must be the hash of a previously-announced zone file.  ' +\n        'The `OWNER_KEY` used to sign the transaction must correspond to the Blockstack ID ' +\n        'to which other users have already subscribed.  `OWNER_KEY` can be a single private key ' +\n        'or a serialized multisig private key bundle.\\n' +\n        '\\n' +\n        'If this command succeeds, it will print a transaction ID.  The rest of the Blockstack peer ' +\n        'network will process it once the transaction reaches 7 confirmations.\\n' +\n        '\\n' +\n        'Examples:\\n' +\n        '\\n' +\n        '    $ # Tip: You can obtain the owner key with the get_owner_keys command\\n' +\n        '    $ export OWNER_KEY=\"136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01\"\\n' +\n        '    $ blockstack-cli announce 737c631c7c5d911c6617993c21fba731363f1cfe \"$OWNER_KEY\"\\n' +\n        '    d51749aeec2803e91a2f8bdec8d3e413491fd816b4962372b214ab74acb0bba8\\n' +\n        '\\n' +\n        '    $ export OWNER_KEY=\"2,136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01,1885cba486a42960499d1f137ef3a475725ceb11f45d74631f9928280196f67401,2418981c7f3a91d4467a65a518e14fafa30e07e6879c11fab7106ea72b49a7cb01\"\\n' +\n        '    $ blockstack-cli announce 737c631c7c5d911c6617993c21fba731363f1cfe \"$OWNER_KEY\"\\n' +\n        '    8136a1114098893b28a693e8d84451abf99ee37ef8766f4bc59808eed76968c9\\n' +\n        '\\n',\n      group: 'Peer Services',\n    },\n    authenticator: {\n      type: 'array',\n      items: [\n        {\n          name: 'app_gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n          pattern: '.+',\n        },\n        {\n          name: 'profile_gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'port',\n          type: 'string',\n          realtype: 'portnum',\n          pattern: '^[0-9]+',\n        },\n      ],\n      minItems: 2,\n      maxItems: 4,\n      help:\n        'Run an authentication endpoint for the set of names owned ' +\n        'by the given backup phrase.  Send applications the given Gaia hub URL on sign-in, ' +\n        'so the application will use it to read/write user data.\\n' +\n        '\\n' +\n        'You can supply your encrypted backup phrase instead of the raw backup phrase.  If so, ' +\n        'then you will be prompted for your password before any authentication takes place.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export BACKUP_PHRASE=\"oak indicate inside poet please share dinner monitor glow hire source perfect\"\\n' +\n        '    $ export APP_GAIA_HUB=\"https://1.2.3.4\"\\n' +\n        '    $ export PROFILE_GAIA_HUB=\"https://hub.blockstack.org\"\\n' +\n        '    $ blockstack-cli authenticator \"$APP_GAIA_HUB\" \"$BACKUP_PHRASE\" \"$PROFILE_GAIA_HUB\" 8888\\n' +\n        '    Press Ctrl+C to exit\\n' +\n        '    Authentication server started on 8888\\n',\n      group: 'Authentication',\n    },\n    balance: {\n      type: 'array',\n      items: [\n        {\n          name: 'address',\n          type: 'string',\n          realtype: 'address',\n          pattern: `${ADDRESS_PATTERN}|${STACKS_ADDRESS_PATTERN}`,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Query the balance of an account.  Returns the balances of each kind of token ' +\n        'that the account owns.  The balances will be in the *smallest possible units* of the ' +\n        'token (i.e. satoshis for BTC, microStacks for Stacks, etc.).\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli balance 16pm276FpJYpm7Dv3GEaRqTVvGPTdceoY4\\n' +\n        '    {\\n' +\n        '      \"BTC\": \"123456\"\\n' +\n        '      \"STACKS\": \"123456\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli balance SPZY1V53Z4TVRHHW9Z7SFG8CZNRAG7BD8WJ6SXD0\\n' +\n        '    {\\n' +\n        '      \"BTC\": \"123456\"\\n' +\n        '      \"STACKS\": \"123456\"\\n' +\n        '    }\\n',\n      group: 'Account Management',\n    },\n    call_contract_func: {\n      type: 'array',\n      items: [\n        {\n          name: 'contract_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: `${STACKS_ADDRESS_PATTERN}`,\n        },\n        {\n          name: 'contract_name',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^[a-zA-Z]([a-zA-Z0-9]|[-_])*$',\n        },\n        {\n          name: 'function_name',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^[a-zA-Z]([a-zA-Z0-9]|[-_!?])*$',\n        },\n        {\n          name: 'fee',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'nonce',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 6,\n      maxItems: 6,\n      help:\n        'Call a function in a deployed Clarity smart contract.\\n' +\n        '\\n' +\n        'If the command succeeds, it prints out a transaction ID.' +\n        '\\n' +\n        'Example:\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli call_contract_func SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X contract_name' +\n        '      contract_function 1 0 \"$PAYMENT\"\\n' +\n        '    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    call_read_only_contract_func: {\n      type: 'array',\n      items: [\n        {\n          name: 'contract_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: `${STACKS_ADDRESS_PATTERN}`,\n        },\n        {\n          name: 'contract_name',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^[a-zA-Z]([a-zA-Z0-9]|[-_])*$',\n        },\n        {\n          name: 'function_name',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^[a-zA-Z]([a-zA-Z0-9]|[-_!?])*$',\n        },\n        {\n          name: 'sender_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: `${STACKS_ADDRESS_PATTERN}`,\n        },\n      ],\n      minItems: 4,\n      maxItems: 4,\n      help:\n        'Call a read-only function in a deployed Clarity smart contract.\\n' +\n        '\\n' +\n        'If the command succeeds, it prints out a Clarity value.' +\n        '\\n' +\n        'Example:\\n' +\n        '    $ blockstack-cli call_read_only_contract_func SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X contract_name' +\n        '     contract_function SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    convert_address: {\n      type: 'array',\n      items: [\n        {\n          name: 'address',\n          type: 'string',\n          realtype: 'address',\n          pattern: `${ADDRESS_PATTERN}|${STACKS_ADDRESS_PATTERN}`,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Convert a Bitcoin address to a Stacks address and vice versa.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli convert_address 12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW\",\\n' +\n        '      \"BTC\": \"12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli convert_address SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW\",\\n' +\n        '      \"BTC\": \"12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD\"\\n' +\n        '    }\\n',\n      group: 'Account Management',\n    },\n    decrypt_keychain: {\n      type: 'array',\n      items: [\n        {\n          name: 'encrypted_backup_phrase',\n          type: 'string',\n          realtype: 'encrypted_backup_phrase',\n          pattern: '^[^ ]+$',\n        },\n        {\n          name: 'password',\n          type: 'string',\n          realtype: 'password',\n          pattern: '.+',\n        },\n      ],\n      minItems: 1,\n      maxItems: 2,\n      help:\n        'Decrypt an encrypted backup phrase with a password.  Decrypts to a 12-word ' +\n        'backup phrase if done correctly.  The password will be prompted if not given.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # password is \"asdf\"\\n' +\n        '    $ blockstack-cli decrypt_keychain \"bfMDtOucUGcJXjZo6vkrZWgEzue9fzPsZ7A6Pl4LQuxLI1xsVF0VPgBkMsnSLCmYS5YHh7R3mNtMmX45Bq9sNGPfPsseQMR0fD9XaHi+tBg=\\n' +\n        '    Enter password:\\n' +\n        '    section amount spend resemble spray verify night immune tattoo best emotion parrot',\n      group: 'Key Management',\n    },\n    deploy_contract: {\n      type: 'array',\n      items: [\n        {\n          name: 'source_file',\n          type: 'string',\n          realtype: 'path',\n          pattern: '.+',\n        },\n        {\n          name: 'contract_name',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^[a-zA-Z]([a-zA-Z0-9]|[-_])*$',\n        },\n        {\n          name: 'fee',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'nonce',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 5,\n      maxItems: 5,\n      help:\n        'Deploys a Clarity smart contract on the network.\\n' +\n        '\\n' +\n        'If the command succeeds, it prints out a transaction ID.' +\n        '\\n' +\n        'Example:\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli deploy_contract ./my_contract.clar my_contract 1 0 \"$PAYMENT\"\\n' +\n        '    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    docs: {\n      type: 'array',\n      items: [\n        {\n          name: 'format',\n          type: 'string',\n          realtype: 'output_format',\n          pattern: '^json$',\n        },\n      ],\n      minItems: 0,\n      maxItems: 1,\n      help: 'Dump the documentation for all commands as JSON to standard out.',\n      group: 'CLI',\n    },\n    encrypt_keychain: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: 'backup_phrase',\n          pattern: '.+',\n        },\n        {\n          name: 'password',\n          type: 'string',\n          realtype: 'password',\n          pattern: '.+',\n        },\n      ],\n      minItems: 1,\n      maxItems: 2,\n      help:\n        'Encrypt a 12-word backup phrase, which can be decrypted later with the ' +\n        '`decrypt_backup_phrase` command.  The password will be prompted if not given.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '     $ # password is \"asdf\"\\n' +\n        '     $ blockstack-cli encrypt_keychain \"section amount spend resemble spray verify night immune tattoo best emotion parrot\"\\n' +\n        '     Enter password:\\n' +\n        '     Enter password again:\\n' +\n        '     M+DnBHYb1fgw4N3oZ+5uTEAua5bAWkgTW/SjmmBhGGbJtjOtqVV+RrLJEJOgT35hBon4WKdGWye2vTdgqDo7+HIobwJwkQtN2YF9g3zPsKk=',\n      group: 'Key Management',\n    },\n    gaia_dump_bucket: {\n      type: 'array',\n      items: [\n        {\n          name: 'name_or_id_address',\n          type: 'string',\n          realtype: 'name_or_id_address',\n          pattern: `${ID_ADDRESS_PATTERN}|${NAME_PATTERN}|${SUBDOMAIN_PATTERN}`,\n        },\n        {\n          name: 'app_origin',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n        {\n          name: 'dump_dir',\n          type: 'string',\n          realtype: 'path',\n          pattern: '.+',\n        },\n      ],\n      minItems: 5,\n      maxItems: 5,\n      help:\n        'Download the contents of a Gaia hub bucket to a given directory.  The `GAIA_HUB` argument ' +\n        'must correspond to the *write* endpoint of the Gaia hub -- that is, you should be able to fetch ' +\n        '`$GAIA_HUB/hub_info`.  If `DUMP_DIR` does not exist, it will be created.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export BACKUP_PHRASE=\"section amount spend resemble spray verify night immune tattoo best emotion parrot\\n' +\n        '    $ blockstack-cli gaia_dump_bucket hello.id.blockstack https://sample.app https://hub.blockstack.org \"$BACKUP_PHRASE\" ./backups\\n' +\n        '    Download 3 files...\\n' +\n        '    Download hello_world to ./backups/hello_world\\n' +\n        '    Download dir/format to ./backups/dir\\\\x2fformat\\n' +\n        '    Download /.dotfile to ./backups/\\\\x2f.dotfile\\n' +\n        '    3\\n',\n      group: 'Gaia',\n    },\n    gaia_getfile: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n        {\n          name: 'app_origin',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'filename',\n          type: 'string',\n          realtype: 'filename',\n          pattern: '.+',\n        },\n        {\n          name: 'app_private_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_UNCOMPRESSED_PATTERN,\n        },\n        {\n          name: 'decrypt',\n          type: 'string',\n          realtype: 'boolean',\n          pattern: BOOLEAN_PATTERN,\n        },\n        {\n          name: 'verify',\n          type: 'string',\n          realtype: 'boolean',\n          pattern: BOOLEAN_PATTERN,\n        },\n      ],\n      minItems: 3,\n      maxItems: 6,\n      help:\n        \"Get a file from another user's Gaia hub.  Prints the file data to stdout.  If you \" +\n        'want to read an encrypted file, and/or verify a signed file, then you must pass an app ' +\n        'private key, and pass 1 for `DECRYPT` and/or `VERIFY`.  If the file is encrypted, and you do not ' +\n        'pass an app private key, then this command downloads the ciphertext.  If the file is signed, ' +\n        'and you want to download its data and its signature, then you must run this command twice -- ' +\n        'once to get the file contents at `FILENAME`, and once to get the signature (whose name will be `FILENAME`.sig).\\n' +\n        '\\n' +\n        'Gaia is a key-value store, so it does not have any built-in notion of directories.  However, ' +\n        'most underlying storage systems do -- directory separators in the name of a file in ' +\n        \"Gaia may be internally treated as first-class directories (it depends on the Gaia hub's driver).\" +\n        'As such, repeated directory separators will be treated as a single directory separator by this command.  ' +\n        'For example, the file name `a/b.txt`, `/a/b.txt`, and `///a////b.txt` will be treated as identical.\\n' +\n        '\\n' +\n        'Example without encryption:\\n' +\n        '\\n' +\n        '    $ # Get an unencrypted, unsigned file\\n' +\n        '    $ blockstack-cli gaia_getfile ryan.id http://public.ykliao.com statuses.json\\n' +\n        '    [{\"id\":0,\"text\":\"Hello, Blockstack!\",\"created_at\":1515786983492}]\\n' +\n        '\\n' +\n        'Example with encryption:\\n' +\n        '\\n' +\n        '    $ # Get an encrypted file without decrypting\\n' +\n        '    $ blockstack-cli gaia_getfile ryan.id https://app.graphitedocs.com documentscollection.json\\n' +\n        '    ' +\n        '    $ # Get an encrypted file, and decrypt it\\n' +\n        '    $ # Tip: You can obtain the app key with the get_app_keys command\\n' +\n        '    $ export APP_KEY=\"3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19\"\\n' +\n        '    $ blockstack-cli gaia_getfile ryan.id https://app.graphitedocs.com documentscollection.json \"$APP_KEY\" 1 0\\n',\n      group: 'Gaia',\n    },\n    gaia_putfile: {\n      type: 'array',\n      items: [\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'app_private_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_UNCOMPRESSED_PATTERN,\n        },\n        {\n          name: 'data_path',\n          type: 'string',\n          realtype: 'path',\n          pattern: '.+',\n        },\n        {\n          name: 'gaia_filename',\n          type: 'string',\n          realtype: 'filename',\n          pattern: '.+',\n        },\n        {\n          name: 'encrypt',\n          type: 'string',\n          realtype: 'boolean',\n          pattern: BOOLEAN_PATTERN,\n        },\n        {\n          name: 'sign',\n          type: 'string',\n          realtype: 'boolean',\n          pattern: BOOLEAN_PATTERN,\n        },\n      ],\n      minItems: 4,\n      maxItems: 6,\n      help:\n        'Put a file into a given Gaia hub, authenticating with the given app private key.  ' +\n        'Optionally encrypt and/or sign the data with the given app private key.  If the file is ' +\n        'successfully stored, this command prints out the URLs at which it can be fetched.\\n' +\n        '\\n' +\n        'Gaia is a key-value store, so it does not have any built-in notion of directories.  However, ' +\n        'most underlying storage systems do -- directory separators in the name of a file in ' +\n        \"Gaia may be internally treated as first-class directories (it depends on the Gaia hub's driver).\" +\n        'As such, repeated directory separators will be treated as a single directory separator by this command.  ' +\n        'For example, the file name `a/b.txt`, `/a/b.txt`, and `///a////b.txt` will be treated as identical.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Store 4 versions of a file: plaintext, encrypted, signed, and encrypted+signed\\n' +\n        '    $ # Tip: You can obtain the app key with the get_app_keys command.\\n' +\n        '    $ export APP_KEY=\"3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19\"\\n' +\n        '    $ blockstack-cli gaia_putfile https://hub.blockstack.org \"$APP_KEY\" /path/to/file.txt file.txt\\n' +\n        '    {\\n' +\n        '       \"urls\": \"https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file.txt\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli gaia_putfile https://hub.blockstack.org \"$APP_KEY\" /path/to/file.txt file-encrypted.txt 1\\n' +\n        '    {\\n' +\n        '       \"urls\": \"https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-encrypted.txt\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli gaia_putfile https://hub.blockstack.org \"$APP_KEY\" /path/to/file.txt file-signed.txt 0 1\\n' +\n        '    {\\n' +\n        '       \"urls\": \"https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-signed.txt\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli gaia_putfile https://hub.blockstack.org \"$APP_KEY\" /path/to/file.txt file-encrypted-signed.txt 1 1\\n' +\n        '    {\\n' +\n        '       \"urls\": \"https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-encrypted-signed.txt\"\\n' +\n        '    }\\n',\n      group: 'Gaia',\n    },\n    gaia_deletefile: {\n      type: 'array',\n      items: [\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'app_private_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_UNCOMPRESSED_PATTERN,\n        },\n        {\n          name: 'gaia_filename',\n          type: 'string',\n          realtype: 'filename',\n          pattern: '.+',\n        },\n        {\n          name: 'was_signed',\n          type: 'string',\n          realtype: 'boolean',\n          pattern: BOOLEAN_PATTERN,\n        },\n      ],\n      minItems: 3,\n      maxItems: 4,\n      help:\n        'Delete a file in a Gaia hub, as well as its signature metadata (which is stored in a separate file).' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: You can obtain the app key with the get_app_keys command.\\n' +\n        '    $ export APP_KEY=\"3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19\"\\n' +\n        '    $ blockstack-cli gaia_deletefile https://hub.blockstack.org \"$APP_KEY\" file.txt false\\n' +\n        '    ok',\n      group: 'Gaia',\n    },\n    gaia_listfiles: {\n      type: 'array',\n      items: [\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'app_private_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_UNCOMPRESSED_PATTERN,\n        },\n      ],\n      minItems: 2,\n      maxItems: 3,\n      help:\n        'List all the files in a Gaia hub bucket.  You must have the private key for the bucket ' +\n        'in order to list its contents.  The command prints each file name on its own line, and when ' +\n        'finished, it prints the number of files listed.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: You can obtain the app key with the get_app_keys command.\\n' +\n        '    $ export APP_KEY=\"3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19\"\\n' +\n        '    $ blockstack-cli gaia_listfiles \"https://hub.blockstack.org\" \"$APP_KEY\"\\n' +\n        '    hello_world\\n' +\n        '    dir/format\\n' +\n        '    /.dotfile\\n' +\n        '    3\\n',\n      group: 'Gaia',\n    },\n    gaia_restore_bucket: {\n      type: 'array',\n      items: [\n        {\n          name: 'name_or_id_address',\n          type: 'string',\n          realtype: 'name_or_id_address',\n          pattern: `${ID_ADDRESS_PATTERN}|${NAME_PATTERN}|${SUBDOMAIN_PATTERN}`,\n        },\n        {\n          name: 'app_origin',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n        {\n          name: 'dump_dir',\n          type: 'string',\n          realtype: 'path',\n          pattern: '.+',\n        },\n      ],\n      minItems: 5,\n      maxItems: 5,\n      help:\n        'Upload the contents of a previously-dumped Gaia bucket to a new Gaia hub.  The `GAIA_HUB` argument ' +\n        'must correspond to the *write* endpoint of the Gaia hub -- that is, you should be able to fetch ' +\n        '`$GAIA_HUB/hub_info`.  `DUMP_DIR` must contain the file contents created by a previous successful run of the gaia_dump_bucket command, ' +\n        'and both `NAME_OR_ID_ADDRESS` and `APP_ORIGIN` must be the same as they were when it was run.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export BACKUP_PHRASE=\"section amount spend resemble spray verify night immune tattoo best emotion parrot\"\\n' +\n        '    $ blockstack-cli gaia_restore_bucket hello.id.blockstack https://sample.app https://new.gaia.hub \"$BACKUP_PHRASE\" ./backups\\n' +\n        '    Uploaded ./backups/hello_world to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc/hello_world\\n' +\n        '    Uploaded ./backups/dir\\\\x2fformat to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc/dir/format\\n' +\n        '    Uploaded ./backups/\\\\x2f.dotfile to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc//.dotfile\\n' +\n        '    3\\n',\n      group: 'Gaia',\n    },\n    gaia_sethub: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `^${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n        {\n          name: 'owner_gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'app_origin',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'app_gaia_hub',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n      ],\n      minItems: 5,\n      maxItems: 5,\n      help:\n        'Set the Gaia hub for a particular application for a Blockstack ID.  If the command succeeds, ' +\n        'the URLs to your updated profile will be printed and your profile will contain an entry in its \"apps\" ' +\n        'key that links the given `APP_ORIGIN` to the given `APP_GAIA_HUB`.\\n' +\n        '\\n' +\n        'NOTE: Both `OWNER_GAIA_HUB` and `APP_GAIA_HUB` must be the *write* endpoints of their respective Gaia hubs.\\n' +\n        '\\n' +\n        'Your 12-word phrase (in either raw or encrypted form) is required to re-sign and store your ' +\n        'profile and to generate an app-specific key and Gaia bucket.  If you give the encrypted backup phrase, you will be prompted for a password.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export BACKUP_PHRASE=\"soap fog wealth upon actual blossom neither timber phone exile monkey vocal\"\\n' +\n        '    $ blockstack-cli gaia_sethub hello_world.id https://hub.blockstack.org https://my.cool.app https://my.app.gaia.hub \"$BACKUP_PHRASE\"\\n' +\n        '    {\\n' +\n        '      \"profileUrls\": {\\n' +\n        '        \"error\": null,\\n' +\n        '        \"dataUrls\": [\\n' +\n        '          \"https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json\"\\n' +\n        '        ]\\n' +\n        '      }\\n' +\n        '    }\\n' +\n        '    \\n' +\n        '    $ # You can check the new apps entry with curl and jq as follows:\\n' +\n        '    $ curl -sL https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json | jq \".[0].decodedToken.payload.claim.apps\"\\n' +\n        '    {\\n' +\n        '      \"https://my.cool.app\": \"https://my.app.gaia.hub/hub/1EqzyQLJ15KG1WQmi5cf1HtmSeqS1Wb8tY/\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Gaia',\n    },\n    get_account_history: {\n      type: 'array',\n      items: [\n        {\n          name: 'address',\n          type: 'string',\n          realtype: 'address',\n          pattern: STACKS_ADDRESS_PATTERN,\n        },\n        {\n          name: 'page',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Query the history of account debits and credits over a given block range.  ' +\n        'Returns the history one page at a time.  An empty result indicates that the page ' +\n        'number has exceeded the number of historic operations in the given block range.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_account_history SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA 0\\n' +\n        '    [\\n' +\n        '      {\\n' +\n        '        \"address\": \"SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA\",\\n' +\n        '        \"block_id\": 56789\\n' +\n        '        \"credit_value\": \"100000000000\",\\n' +\n        '        \"debit_value\": \"0\",\\n' +\n        '        \"lock_transfer_block_id\": 0,\\n' +\n        '        \"txid\": \"0e5db84d94adff5b771262b9df015164703b39bb4a70bf499a1602b858a0a5a1\",\\n' +\n        '        \"type\": \"STACKS\",\\n' +\n        '        \"vtxindex\": 0\\n' +\n        '      },\\n' +\n        '      {\\n' +\n        '        \"address\": \"SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA\",\\n' +\n        '        \"block_id\": 56790,\\n' +\n        '        \"credit_value\": \"100000000000\",\\n' +\n        '        \"debit_value\": \"64000000000\",\\n' +\n        '        \"lock_transfer_block_id\": 0,\\n' +\n        '        \"txid\": \"5a0c67144626f7bd4514e4de3f3bbf251383ca13887444f326bac4bc8b8060ee\",\\n' +\n        '        \"type\": \"STACKS\",\\n' +\n        '        \"vtxindex\": 1\\n' +\n        '      },\\n' +\n        '      {\\n' +\n        '        \"address\": \"SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA\",\\n' +\n        '        \"block_id\": 56791,\\n' +\n        '        \"credit_value\": \"100000000000\",\\n' +\n        '        \"debit_value\": \"70400000000\",\\n' +\n        '        \"lock_transfer_block_id\": 0,\\n' +\n        '        \"txid\": \"e54c271d6a9feb4d1859d32bc99ffd713493282adef5b4fbf50bca9e33fc0ecc\",\\n' +\n        '        \"type\": \"STACKS\",\\n' +\n        '        \"vtxindex\": 2\\n' +\n        '      },\\n' +\n        '      {\\n' +\n        '        \"address\": \"SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA\",\\n' +\n        '        \"block_id\": 56792,\\n' +\n        '        \"credit_value\": \"100000000000\",\\n' +\n        '        \"debit_value\": \"76800000000\",\\n' +\n        '        \"lock_transfer_block_id\": 0,\\n' +\n        '        \"txid\": \"06e0d313261baefec1e59783e256ab487e17e0e776e2fdab0920cc624537e3c8\",\\n' +\n        '        \"type\": \"STACKS\",\\n' +\n        '        \"vtxindex\": 3\\n' +\n        '      }\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    get_account_at: {\n      type: 'array',\n      items: [\n        {\n          name: 'address',\n          type: 'string',\n          realtype: 'address',\n          pattern: STACKS_ADDRESS_PATTERN,\n        },\n        {\n          name: 'blocknumber',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Query the list of token debits and credits on a given address that occurred ' +\n        'at a particular block height.  Does not include BTC debits and credits; only Stacks.\\n' +\n        '\\n' +\n        'Example\\n' +\n        '\\n' +\n        '    $ blockstack-cli -t get_account_at SP2NTAQFECYGSTE1W47P71FG21H8F00KZZWFGEVKQ 56789\\n' +\n        '    [\\n' +\n        '      {\\n' +\n        '        \"debit_value\": \"0\",\\n' +\n        '        \"block_id\": 56789\\n' +\n        '        \"lock_transfer_block_id\": 0,\\n' +\n        '        \"txid\": \"291817c78a865c1f72938695218a48174265b2358e89b9448edc89ceefd66aa0\",\\n' +\n        '        \"address\": \"SP2NTAQFECYGSTE1W47P71FG21H8F00KZZWFGEVKQ\",\\n' +\n        '        \"credit_value\": \"1000000000000000000\",\\n' +\n        '        \"type\": \"STACKS\",\\n' +\n        '        \"vtxindex\": 0\\n' +\n        '      }\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    get_address: {\n      type: 'array',\n      items: [\n        {\n          name: 'private_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the address of a private key or multisig private key bundle.  Gives the BTC and STACKS addresses\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_address f5185b9ca93bdcb5753fded3b097dab8547a8b47d2be578412d0687a9a0184cb01\\n' +\n        '    {\\n' +\n        '      \"BTC\": \"1JFhWyVPpZQjbPcXFtpGtTmU22u4fhBVmq\",\\n' +\n        '      \"STACKS\": \"SP2YM3J4KQK09V670TD6ZZ1XYNYCNGCWCVVKSDFWQ\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli get_address 1,f5185b9ca93bdcb5753fded3b097dab8547a8b47d2be578412d0687a9a0184cb01,ff2ff4f4e7f8a1979ffad4fc869def1657fd5d48fc9cf40c1924725ead60942c01\\n' +\n        '    {\\n' +\n        '      \"BTC\": \"363pKBhc5ipDws1k5181KFf6RSxhBZ7e3p\",\\n' +\n        '      \"STACKS\": \"SMQWZ30EXVG6XEC1K4QTDP16C1CAWSK1JSWMS0QN\"\\n' +\n        '    }',\n      group: 'Key Management',\n    },\n    get_blockchain_record: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `^${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the low-level blockchain-hosted state for a Blockstack ID.  This command ' +\n        'is used mainly for debugging and diagnostics.  You should not rely on it to be stable.',\n      group: 'Querying Blockstack IDs',\n    },\n    get_blockchain_history: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n        {\n          name: 'page',\n          type: 'string',\n          realtype: 'page_number',\n          pattern: '^[0-9]+$',\n        },\n      ],\n      minItems: 1,\n      maxItems: 2,\n      help:\n        'Get the low-level blockchain-hosted history of operations on a Blockstack ID.  ' +\n        'This command is used mainly for debugging and diagnostics, and is not guaranteed to ' +\n        'be stable across releases.',\n      group: 'Querying Blockstack IDs',\n    },\n    get_confirmations: {\n      type: 'array',\n      items: [\n        {\n          name: 'txid',\n          type: 'string',\n          realtype: 'transaction_id',\n          pattern: TXID_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the block height and number of confirmations for a transaction.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\\n' +\n        '    {\\n' +\n        '      \"blockHeight\": 567890,\\n' +\n        '      \"confirmations\": 7,\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Peer Services',\n    },\n    get_namespace_blockchain_record: {\n      type: 'array',\n      items: [\n        {\n          name: 'namespace_id',\n          type: 'string',\n          realtype: 'namespace_id',\n          pattern: NAMESPACE_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the low-level blockchain-hosted state for a Blockstack namespace.  This command ' +\n        'is used mainly for debugging and diagnostics, and is not guaranteed to be stable across ' +\n        'releases.',\n      group: 'Namespace Operations',\n    },\n    get_app_keys: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n        {\n          name: 'name_or_id_address',\n          type: 'string',\n          realtype: 'name-or-id-address',\n          pattern: `${NAME_PATTERN}|${SUBDOMAIN_PATTERN}|${ID_ADDRESS_PATTERN}`,\n        },\n        {\n          name: 'app_origin',\n          type: 'string',\n          realtype: 'url',\n          pattern: URL_PATTERN,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Get the application private key from a 12-word backup phrase and a name or ID-address.  ' +\n        'This is the private key used to sign data in Gaia, and its address is the Gaia bucket ' +\n        'address.  If you provide your encrypted backup phrase, you will be asked to decrypt it.  ' +\n        'If you provide a name instead of an ID-address, its ID-address will be queried automatically ' +\n        '(note that this means that the name must already be registered).\\n' +\n        '\\n' +\n        'NOTE: This command does NOT verify whether or not the name or ID-address was created by the ' +\n        'backup phrase. You should do this yourself via the `get_owner_keys` command if you are not sure.\\n' +\n        '\\n' +\n        'There are two derivation paths emitted by this command:  a `keyInfo` path and a `legacyKeyInfo`' +\n        \"path.  You should use the one that matches the Gaia hub read URL's address, if you have already \" +\n        'signed in before.  If not, then you should use the `keyInfo` path when possible.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export BACKUP_PHRASE=\"one race buffalo dynamic icon drip width lake extra forest fee kit\"\\n' +\n        '    $ blockstack-cli get_app_keys \"$BACKUP_PHRASE\" example.id.blockstack https://my.cool.dapp\\n' +\n        '    {\\n' +\n        '      \"keyInfo\": {\\n' +\n        '        \"privateKey\": \"TODO\",\\n' +\n        '        \"address\": \"TODO\"\\n' +\n        '      },\\n' +\n        '      \"legacyKeyInfo\": {\\n' +\n        '        \"privateKey\": \"90f9ec4e13fb9a00243b4c1510075157229bda73076c7c721208c2edca28ea8b\",\\n' +\n        '        \"address\": \"1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc\"\\n' +\n        '      },\\n' +\n        '      \"ownerKeyIndex\": 0\\n' +\n        '    }',\n      group: 'Key Management',\n    },\n    get_owner_keys: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n        {\n          name: 'index',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n      ],\n      minItems: 1,\n      maxItems: 2,\n      help:\n        'Get the list of owner private keys and ID-addresses from a 12-word backup phrase.  ' +\n        'Pass non-zero values for INDEX to generate the sequence of ID-addresses that can be used ' +\n        'to own Blockstack IDs.  If you provide an encrypted 12-word backup phrase, you will be ' +\n        'asked for your password to decrypt it.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # get the first 3 owner keys and addresses for a backup phrase\\n' +\n        '    $ export BACKUP_PHRASE=\"soap fog wealth upon actual blossom neither timber phone exile monkey vocal\"\\n' +\n        '    $ blockstack-cli get_owner_keys \"$BACKUP_PHRASE\" 3\\n' +\n        '    [\\n' +\n        '      {\\n' +\n        '        \"privateKey\": \"14b0811d5cd3486d47279d8f3a97008647c64586b121e99862c18863e2a4183501\",\\n' +\n        '        \"version\": \"v0.10-current\",\\n' +\n        '        \"index\": 0,\\n' +\n        '        \"idAddress\": \"ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82\"\\n' +\n        '      },\\n' +\n        '      {\\n' +\n        '        \"privateKey\": \"1b3572d8dd6866828281ac6cf135f04153210c1f9b123743eccb795fd3095e4901\",\\n' +\n        '        \"version\": \"v0.10-current\",\\n' +\n        '        \"index\": 1,\\n' +\n        '        \"idAddress\": \"ID-18pR3UpD1KFrnk88a3MGZmG2dLuZmbJZ25\"\\n' +\n        '      },\\n' +\n        '      {\\n' +\n        '        \"privateKey\": \"b19b6d62356db96d570fb5f08b78f0aa7f384525ba3bdcb96fbde29b8e11710d01\",\\n' +\n        '        \"version\": \"v0.10-current\",\\n' +\n        '        \"index\": 2,\\n' +\n        '        \"idAddress\": \"ID-1Gx4s7ggkjENw3wSY6bNd1CwoQKk857AqN\"\\n' +\n        '      }\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Key Management',\n    },\n    get_payment_key: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the payment private key from a 12-word backup phrase.  If you provide an ' +\n        'encrypted backup phrase, you will be asked for your password to decrypt it.  This command ' +\n        'will tell you your Bitcoin and Stacks token addresses as well.\\n' +\n        '\\n' +\n        'Example\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_payment_key \"soap fog wealth upon actual blossom neither timber phone exile monkey vocal\"\\n' +\n        '    [\\n' +\n        '      {\\n' +\n        '        \"privateKey\": \"4023435e33da4aff0775f33e7b258f257fb20ecff039c919b5782313ab73afb401\",\\n' +\n        '        \"address\": {\\n' +\n        '          \"BTC\": \"1ybaP1gaRwRSWRE4f8JXo2W8fiTZmA4rV\",\\n' +\n        '          \"STACKS\": \"SP5B89ZJAQHBRXVYP15YB5PAY5E24FEW9K4Q63PE\"\\n' +\n        '        },\\n' +\n        '        \"index\": 0\\n' +\n        '      }\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Key Management',\n    },\n    get_stacks_wallet_key: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '24_words_or_ciphertext',\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the payment private key from a 24-word backup phrase used by the Stacks wallet.  If you provide an ' +\n        'encrypted backup phrase, you will be asked for your password to decrypt it.  This command ' +\n        'will tell you your Bitcoin and Stacks token addresses as well.\\n' +\n        '\\n' +\n        'Example\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_stacks_payment_key \"toast canal educate tissue express melody produce later gospel victory meadow outdoor hollow catch liberty annual gasp hat hello april equip thank neck cruise\"\\n' +\n        '    [\\n' +\n        '      {\\n' +\n        '        \"privateKey\": \"a25cea8d310ce656c6d427068c77bad58327334f73e39c296508b06589bc4fa201\",\\n' +\n        '        \"address\": {\\n' +\n        '          \"BTC\": \"1ATAW6TAbTCKgU3xPgAcWQwjW9Q26Eambx\",\\n' +\n        '          \"STACKS\": \"SP1KTQR7CTQNA20SV2VNTF9YABMR6RJERSES3KC6Z\"\\n' +\n        '        },\\n' +\n        '        \"index\": 0\\n' +\n        '      }\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Key Management',\n    },\n    get_zonefile: {\n      type: 'array',\n      items: [\n        {\n          name: 'zonefile_hash',\n          type: 'string',\n          realtype: 'zonefile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get a zone file by hash.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli get_zonefile ee77ad484b7b229f09461e4c2b6d3bd3e152ba95\\n' +\n        '    $ORIGIN ryanshea.id\\n' +\n        '    $TTL 3600\\n' +\n        '    _http._tcp URI 10 1 \"https://gaia.blockstack.org/hub/15BcxePn59Y6mYD2fRLCLCaaHScefqW2No/1/profile.json\"\\n' +\n        '\\n',\n      group: 'Peer Services',\n    },\n    help: {\n      type: 'array',\n      items: [\n        {\n          name: 'command',\n          type: 'string',\n          realtype: 'command',\n        },\n      ],\n      minItems: 0,\n      maxItems: 1,\n      help: 'Get the usage string for a CLI command',\n      group: 'CLI',\n    },\n    lookup: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get and authenticate the profile and zone file for a Blockstack ID.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli lookup example.id\\n' +\n        '\\n',\n      group: 'Querying Blockstack IDs',\n    },\n    names: {\n      type: 'array',\n      items: [\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the list of Blockstack IDs owned by an ID-address.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli names ID-1FpBChfzHG3TdQQRKWAipbLragCUArueG9\\n' +\n        '\\n',\n      group: 'Querying Blockstack IDs',\n    },\n    make_keychain: {\n      type: 'array',\n      items: [\n        {\n          name: 'backup_phrase',\n          type: 'string',\n          realtype: '12_words_or_ciphertext',\n        },\n      ],\n      minItems: 0,\n      maxItems: 1,\n      help:\n        'Generate the owner and payment private keys, optionally from a given 12-word ' +\n        'backup phrase.  If no backup phrase is given, a new one will be generated.  If you provide ' +\n        'your encrypted backup phrase, you will be asked to decrypt it.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli make_keychain\\n' +\n        '    {\\n' +\n        '      \"mnemonic\": \"apart spin rich leader siren foil dish sausage fee pipe ethics bundle\",\\n' +\n        '      \"keyInfo\": {\\n' +\n        '        \"address\": \"SP3G19B6J50FH6JGXAKS06N6WA1XPJCKKM4JCHC2D\"\\n' +\n        '        \"index\": 0,\\n' +\n        '        \"privateKey\": \"56d30f2b605ed114c7dc45599ae521c525d07e1286fbab67452a6586ea49332a01\"\\n' +\n        '      }\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Key Management',\n    },\n    make_zonefile: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: `^${NAME_PATTERN}|${SUBDOMAIN_PATTERN}$`,\n        },\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'ID-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'gaia_url_prefix',\n          type: 'string',\n          realtype: 'url',\n          pattern: '.+',\n        },\n        {\n          name: 'resolver_url',\n          type: 'string',\n          realtype: 'url',\n          pattern: '.+',\n        },\n      ],\n      minItems: 3,\n      maxItems: 4,\n      help:\n        'Generate a zone file for a Blockstack ID with the given profile URL.  If you know ' +\n        'the ID-address for the Blockstack ID, the profile URL usually takes the form of:\\n' +\n        '\\n' +\n        '     {GAIA_URL_PREFIX}/{ADDRESS}/profile.json\\n' +\n        '\\n' +\n        'where `{GAIA_URL_PREFIX}` is the *read* endpoint of your Gaia hub (e.g. https://gaia.blockstack.org/hub) and ' +\n        \"`{ADDRESS}` is the base58check part of your ID-address (i.e. the string following 'ID-').\\n\" +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '     $ blockstack-cli make_zonefile example.id ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82 https://my.gaia.hub/hub\\n' +\n        '     $ORIGIN example.id\\n' +\n        '     $TTL 3600\\n' +\n        '     _http._tcp      IN      URI     10      1       \"https://my.gaia.hub/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json\"\\n' +\n        '\\n',\n      group: 'Peer Services',\n    },\n    name_import: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'gaia_url_prefix',\n          type: 'string',\n          realtype: 'url',\n          pattern: '.+',\n        },\n        {\n          name: 'reveal_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n          pattern: '.+',\n        },\n        {\n          name: 'zonefile_hash',\n          type: 'string',\n          realtype: 'zonefile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n      ],\n      minItems: 4,\n      maxItems: 6,\n      help:\n        'Import a name into a namespace you revealed.  The `REVEAL_KEY` must be the same as ' +\n        'the key that revealed the namespace.  You can only import a name into a namespace if ' +\n        'the namespace has not yet been launched (i.e. via `namespace_ready`), and if the ' +\n        'namespace was revealed less than a year ago (52595 blocks ago).\\n' +\n        '\\n' +\n        'A zone file will be generated for this name automatically, if \"ZONEFILE\" is not given.  By default, ' +\n        \"the zone file will have a URL to the name owner's profile prefixed by `GAIA_URL_PREFIX`.  If you \" +\n        \"know the *write* endpoint for the name owner's Gaia hub, you can find out the `GAIA_URL_PREFIX` \" +\n        'to use with `curl $GAIA_HUB/hub_info`\".\\n' +\n        '\\n' +\n        'If you specify an argument for `ZONEFILE`, then the `GAIA_URL_PREFIX` argument is ignored in favor of ' +\n        'your custom zone file on disk.\\n' +\n        '\\n' +\n        'If you specify a valid zone file hash for `ZONEFILE_HASH` then it will be used in favor of ' +\n        'both `ZONEFILE` and `GAIA_URL_PREFIX`.  The zone file hash will be incorporated directly into the ' +\n        'name-import transaction.\\n' +\n        '\\n' +\n        'This command prints out a transaction ID if it succeeds, and it replicates the zone file (if given) ' +\n        'to a transaction broadcaster (you can choose which one with -T).  The zone file will be automatically ' +\n        'broadcast to the Blockstack peer network when the transaction confirms.  Alternatively, you can do so ' +\n        'yourself with the `zonefile_push` command.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export REVEAL_KEY=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ export ID_ADDRESS=\"ID-18e1bqU7B5qUPY3zJgMLxDnexyStTeSnvV\"\\n' +\n        '    $ blockstack-cli name_import example.id \"$ID_ADDRESS\" https://gaia.blockstack.org/hub \"$REVEAL_KEY\"\\n' +\n        '    f726309cea7a9db364307466dc0e0e759d5c0d6bad1405e2fd970740adc7dc45\\n' +\n        '\\n',\n      group: 'Namespace Operations',\n    },\n    namespace_preorder: {\n      type: 'array',\n      items: [\n        {\n          name: 'namespace_id',\n          type: 'string',\n          realtype: 'namespace_id',\n          pattern: NAMESPACE_PATTERN,\n        },\n        {\n          name: 'reveal_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: ADDRESS_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Preorder a namespace.  This is the first of three steps to creating a namespace.  ' +\n        'Once this transaction is confirmed, you will need to use the `namespace_reveal` command ' +\n        'to reveal the namespace (within 24 hours, or 144 blocks).',\n      group: 'Namespace Operations',\n    },\n    namespace_reveal: {\n      type: 'array',\n      items: [\n        {\n          name: 'namespace_id',\n          type: 'string',\n          realtype: 'namespace_id',\n          pattern: NAMESPACE_PATTERN,\n        },\n        {\n          name: 'reveal_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: ADDRESS_PATTERN,\n        },\n        {\n          // version\n          name: 'version',\n          type: 'string',\n          realtype: '2-byte-integer',\n          pattern: INT_PATTERN,\n        },\n        {\n          // lifetime\n          name: 'lifetime',\n          type: 'string',\n          realtype: '4-byte-integer',\n          pattern: INT_PATTERN,\n        },\n        {\n          // coeff\n          name: 'coefficient',\n          type: 'string',\n          realtype: '1-byte-integer',\n          pattern: INT_PATTERN,\n        },\n        {\n          // base\n          name: 'base',\n          type: 'string',\n          realtype: '1-byte-integer',\n          pattern: INT_PATTERN,\n        },\n        {\n          // buckets\n          name: 'price_buckets',\n          type: 'string',\n          realtype: 'csv-of-16-nybbles',\n          pattern: '^([0-9]{1,2},){15}[0-9]{1,2}$',\n        },\n        {\n          // non-alpha discount\n          name: 'nonalpha_discount',\n          type: 'string',\n          realtype: 'nybble',\n          pattern: INT_PATTERN,\n        },\n        {\n          // no-vowel discount\n          name: 'no_vowel_discount',\n          type: 'string',\n          realtype: 'nybble',\n          pattern: INT_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 10,\n      maxItems: 10,\n      help:\n        'Reveal a preordered namespace, and set the price curve and payment options.  ' +\n        'This is the second of three steps required to create a namespace, and must be done ' +\n        'shortly after the associated `namespace_preorder` command.',\n      group: 'Namespace Operations',\n    },\n    namespace_ready: {\n      type: 'array',\n      items: [\n        {\n          name: 'namespace_id',\n          type: 'string',\n          realtype: 'namespace_id',\n          pattern: NAMESPACE_PATTERN,\n        },\n        {\n          name: 'reveal_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Launch a revealed namespace.  This is the third and final step of creating a namespace.  ' +\n        'Once launched, you will not be able to import names anymore.',\n      group: 'Namespace Operations',\n    },\n    price: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the price of an on-chain Blockstack ID.  Its namespace must already exist.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli price example.id\\n' +\n        '    {\\n' +\n        '      \"units\": \"BTC\",\\n' +\n        '      \"amount\": \"5500\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Querying Blockstack IDs',\n    },\n    price_namespace: {\n      type: 'array',\n      items: [\n        {\n          name: 'namespace_id',\n          type: 'string',\n          realtype: 'namespace_id',\n          pattern: NAMESPACE_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Get the price of a namespace.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # get the price of the .hello namespace\\n' +\n        '    $ blockstack-cli price_namespace hello\\n' +\n        '    {\\n' +\n        '      \"units\": \"BTC\",\\n' +\n        '      \"amount\": \"40000000\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Namespace Operations',\n    },\n    profile_sign: {\n      type: 'array',\n      items: [\n        {\n          name: 'profile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_PATTERN,\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Sign a profile on disk with a given owner private key.  Print out the signed profile JWT.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get the owner key from your 12-word backup phrase using the get_owner_keys command\\n' +\n        '    $ blockstack-cli profile_sign /path/to/profile.json 0ffd299af9c257173be8486ef54a4dd1373407d0629ca25ca68ff24a76be09fb01\\n' +\n        '\\n',\n      group: 'Profiles',\n    },\n    profile_store: {\n      type: 'array',\n      items: [\n        {\n          name: 'user_id',\n          type: 'string',\n          realtype: 'name-or-id-address',\n          pattern: `${NAME_PATTERN}|${SUBDOMAIN_PATTERN}|${ID_ADDRESS_PATTERN}`,\n        },\n        {\n          name: 'profile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_PATTERN,\n        },\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n        },\n      ],\n      minItems: 4,\n      maxItems: 4,\n      help:\n        'Store a profile on disk to a Gaia hub.  `USER_ID` can be either a Blockstack ID or ' +\n        \"an ID-address.  The `GAIA_HUB` argument must be the *write* endpoint for the user's Gaia hub \" +\n        '(e.g. https://hub.blockstack.org).  You can verify this by ensuring that you can run ' +\n        '`curl \"$GAIA_HUB/hub_info\"` successfully.',\n      group: 'Profiles',\n    },\n    profile_verify: {\n      type: 'array',\n      items: [\n        {\n          name: 'profile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: `${ID_ADDRESS_PATTERN}|${PUBLIC_KEY_PATTERN}`,\n        },\n      ],\n      minItems: 2,\n      maxItems: 2,\n      help:\n        'Verify a JWT encoding a profile on disk using an ID-address.  Prints out the contained profile on success.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # get the raw profile JWT\\n' +\n        '    $ curl -sL https://raw.githubusercontent.com/jcnelson/profile/master/judecn.id > /tmp/judecn.id.jwt\\n' +\n        '    $ # Tip: you can get the ID-address for a name with the \"whois\" command\\n' +\n        '    $ blockstack-cli profile_verify /tmp/judecn.id.jwt ID-16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg\\n' +\n        '\\n',\n      group: 'Profiles',\n    },\n    renew: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'new_id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'zonefile_hash',\n          type: 'string',\n          realtype: 'zonefile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n      ],\n      minItems: 3,\n      maxItems: 6,\n      help:\n        'Renew a name.  Optionally transfer it to a new owner address (`NEW_ID_ADDRESS`), ' +\n        'and optionally load up and give it a new zone file on disk (`ZONEFILE`).  If the command ' +\n        'succeeds, it prints out a transaction ID.  You can use with the `get_confirmations` ' +\n        'command to track its confirmations on the underlying blockchain -- once it reaches 7 ' +\n        'confirmations, the rest of the Blockstack peer network will process it.\\n' +\n        '\\n' +\n        'If you create a new zonefile for your name, you will need ' +\n        'to later use `zonefile_push` to replicate the zone file to the Blockstack peer network ' +\n        'once the transaction reaches 7 confirmations.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get your owner key from your backup phrase with \"get_owner_keys\".\\n' +\n        '    $ # Tip: you can get your payment key from your backup phrase with \"get_payment_key\".\\n' +\n        '    $ export OWNER=\"136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli renew hello_world.id \"$OWNER\" \"$PAYMENT\"\\n' +\n        '    3d8945ce76d4261678d76592b472ed639a10d4298f9d730af4edbbc3ec02882e\\n' +\n        '\\n' +\n        '    $ # Renew with a new owner\\n' +\n        '    $ export NEW_OWNER=\"ID-141BcmFVbEuuMb7Bd6umXyV6ZD1WYomYDE\"\\n' +\n        '    $ blockstack-cli renew hello_world.id \"$OWNER\" \"$PAYMENT\" \"$NEW_OWNER\"\\n' +\n        '    33865625ef3f1b607111c0dfba9e58604927173bd2e299a343e19aa6d2cfb263\\n' +\n        '\\n' +\n        '    $ # Renew with a new zone file.\\n' +\n        '    $ # Tip: you can create a new zonefile with the \"make_zonefile\" command.\\n' +\n        '    $ export ZONEFILE_PATH=\"/path/to/new/zonefile.txt\"\\n' +\n        '    $ blockstack-cli renew hello_world.id \"$OWNER\" \"$PAYMENT\" --zonefile \"$ZONEFILE_PATH\"\\n' +\n        '    e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\\n' +\n        '    $ # wait 7 confirmations\\n' +\n        '    $ blockstack-cli get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\\n' +\n        '    {\\n' +\n        '      \"blockHeight\": 567890,\\n' +\n        '      \"confirmations\": 7,\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli -H https://core.blockstack.org zonefile_push \"$ZONEFILE_PATH\"\\n' +\n        '    [\\n' +\n        '      \"https://core.blockstack.org\"\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Blockstack ID Management',\n    },\n    register: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n      ],\n      minItems: 4,\n      maxItems: 5,\n      help:\n        'If you are trying to register a name for a *private key*, use this command.\\n' +\n        '\\n' +\n        'Register a name to a single name-owning private key.  After successfully running this command, ' +\n        'and after waiting a couple hours, your name will be ready to use and will resolve to a ' +\n        'signed empty profile hosted on the given Gaia hub (`GAIA_HUB`).\\n' +\n        '\\n' +\n        'Behind the scenes, this will generate and send two transactions ' +\n        'and generate and replicate a zone file with the given Gaia hub URL (`GAIA_HUB`).  ' +\n        'Note that the `GAIA_HUB` argument must correspond to the *write* endpoint of the Gaia hub ' +\n        '(i.e. you should be able to run \\'curl \"$GAIA_HUB/hub_info\"\\' and get back data).  If you ' +\n        'are using Blockstack PBC\\'s default Gaia hub, pass \"https://hub.blockstack.org\" for this ' +\n        'argument.\\n' +\n        '\\n' +\n        \"By default, this command generates a zone file automatically that points to the Gaia hub's \" +\n        'read endpoint (which is queried on-the-fly from `GAIA_HUB`).  If you instead want to have a custom zone file for this name, ' +\n        'you can specify a path to it on disk with the `ZONEFILE` argument.\\n' +\n        '\\n' +\n        'If this command completes successfully, your name will be ready to use once both transactions have 7+ confirmations.  ' +\n        'You can use the `get_confirmations` command to track the confirmations ' +\n        'on the transaction IDs returned by this command.\\n' +\n        '\\n' +\n        'WARNING: You should *NOT* use the payment private key (`PAYMENT_KEY`) while the name is being confirmed.  ' +\n        'If you do so, you could double-spend one of the pending transactions and lose your name.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export OWNER=\"136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli register example.id \"$OWNER\" \"$PAYMENT\" https://hub.blockstack.org\\n' +\n        '    9bb908bfd4ab221f0829167a461229172184fc825a012c4e551533aa283207b1\\n' +\n        '\\n',\n      group: 'Blockstack ID Management',\n    },\n    register_addr: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'id-address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'gaia_url_prefix',\n          type: 'string',\n          realtype: 'url',\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n      ],\n      minItems: 4,\n      maxItems: 5,\n      help:\n        'If you are trying to register a name for an *ID-address*, use this command.\\n' +\n        '\\n' +\n        \"Register a name to someone's ID-address.  After successfully running this \" +\n        'command and waiting a couple of hours, the name will be registered on-chain and have a ' +\n        \"zone file with a URL to where the owner's profile should be.  This command does NOT \" +\n        'generate, sign, or replicate a profile for the name---the name owner will need to do this ' +\n        'separately, once the name is registered.\\n' +\n        '\\n' +\n        'Behind the scenes, this command will generate two ' +\n        'transactions, and generate and replicate a zone file with the given Gaia hub read URL ' +\n        '(`GAIA_URL_PREFIX`).  Note that the `GAIA_URL_PREFIX` argument must correspond to the *read* endpoint of the Gaia hub ' +\n        '(e.g. if you are using Blockstack PBC\\'s default Gaia hub, this is \"https://gaia.blockstack.org/hub\"). ' +\n        \"If you know the *write* endpoint of the name owner's Gaia hub, you can find the right value for \" +\n        '`GAIA_URL_PREFIX` by running \"curl $GAIA_HUB/hub_info\".\\n' +\n        '\\n' +\n        'No profile will be generated or uploaded by this command.  Instead, this command generates ' +\n        'a zone file that will include the URL to a profile based on the `GAIA_URL_PREFIX` argument.\\n' +\n        '\\n' +\n        'The zone file will be generated automatically from the `GAIA_URL_PREFIX` argument.  If you need ' +\n        'to use a custom zone file, you can pass the path to it on disk via the `ZONEFILE` argument.\\n' +\n        '\\n' +\n        'If this command completes successfully, the name will be ready to use in a couple of ' +\n        'hours---that is, once both transactions have 7+ confirmations. ' +\n        'You can use the `get_confirmations` command to track the confirmations.\\n' +\n        '\\n' +\n        'WARNING: You should *NOT* use the payment private key (`PAYMENT_KEY`) while the name is being confirmed.  ' +\n        'If you do so, you could double-spend one of the pending transactions and lose the name.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export ID_ADDRESS=\"ID-18e1bqU7B5qUPY3zJgMLxDnexyStTeSnvV\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli register_addr example.id \"$ID_ADDRESS\" \"$PAYMENT\" https://gaia.blockstack.org/hub',\n      group: 'Blockstack ID Management',\n    },\n    register_subdomain: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: SUBDOMAIN_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: PRIVATE_KEY_PATTERN,\n        },\n        {\n          name: 'gaia_hub',\n          type: 'string',\n          realtype: 'url',\n        },\n        {\n          name: 'registrar',\n          type: 'string',\n          realtype: 'url',\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n      ],\n      minItems: 4,\n      maxItems: 5,\n      help:\n        'Register a subdomain.  This will generate and sign a subdomain zone file record ' +\n        'with the given `GAIA_HUB` URL and send it to the given subdomain registrar (`REGISTRAR`).\\n' +\n        '\\n' +\n        'This command generates, signs, and uploads a profile to the `GAIA_HUB` url.  Note that the `GAIA_HUB` ' +\n        'argument must correspond to the *write* endpoint of your Gaia hub (i.e. you should be able ' +\n        \"to run 'curl \\\"$GAIA_HUB/hub_info\\\"' successfully).  If you are using Blockstack PBC's default \" +\n        'Gaia hub, this argument should be \"https://hub.blockstack.org\".\\n' +\n        '\\n' +\n        'WARNING: At this time, no validation will occur on the registrar URL.  Be sure that the URL ' +\n        'corresponds to the registrar for the on-chain name before running this command!\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export OWNER=\"6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01\"\\n' +\n        '    $ # NOTE: https://registrar.blockstack.org is the registrar for personal.id!\\n' +\n        '    $ blockstack-cli register_subdomain hello.personal.id \"$OWNER\" https://hub.blockstack.org https://registrar.blockstack.org\\n',\n      group: 'Blockstack ID Management',\n    },\n    revoke: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Revoke a name.  This renders it unusable until it expires (if ever).  This command ' +\n        'prints out the transaction ID if it succeeds.  Once the transaction confirms, the name will ' +\n        'be revoked by each node in the peer network.  This command only works for on-chain names, not ' +\n        'subdomains.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get your owner and payment keys from your 12-word backup phrase using the get_owner_keys and get_payment_key commands.\\n' +\n        '    $ export OWNER=\"6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli revoke example.id \"$OWNER\" \"$PAYMENT\"\\n' +\n        '    233b559c97891affa010567bd582110508d0236b4e3f88d3b1d0731629e030b0\\n' +\n        '\\n',\n      group: 'Blockstack ID Management',\n    },\n    send_btc: {\n      type: 'array',\n      items: [\n        {\n          name: 'recipient_address',\n          type: 'string',\n          realtype: 'address',\n          pattern: ADDRESS_PATTERN,\n        },\n        {\n          name: 'amount',\n          type: 'string',\n          realtype: 'satoshis',\n          pattern: INT_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Send some Bitcoin (in satoshis) from a payment key to an address.  Up to the given ' +\n        'amount will be spent, but likely less---the actual amount sent will be the amount given, ' +\n        'minus the transaction fee.  For example, if you want to send 10000 satoshis but the ' +\n        'transaction fee is 2000 satoshis, then the resulting transaction will send 8000 satoshis ' +\n        'to the given address.  This is to ensure that this command does not *over*-spend your ' +\n        'Bitcoin.  If you want to check the amount before spending, pass the `-x` flag to see the ' +\n        'raw transaction.\\n' +\n        '\\n' +\n        'If the command succeeds, it prints out the transaction ID.  You can track its confirmations ' +\n        'with the `get_confirmations` command.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli send_btc 18qTSE5PPQmypwKKej7QX5Db2XAttgYeA1 123456 \"$PAYMENT\"\\n' +\n        '    c7e239fd24da30e36e011e6bc7db153574a5b40a3a8dc3b727adb54ad038acc5\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    send_tokens: {\n      type: 'array',\n      items: [\n        {\n          name: 'address',\n          type: 'string',\n          realtype: 'address',\n          pattern: STACKS_ADDRESS_PATTERN,\n        },\n        {\n          name: 'amount',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'fee',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'nonce',\n          type: 'string',\n          realtype: 'integer',\n          pattern: '^[0-9]+$',\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'memo',\n          type: 'string',\n          realtype: 'string',\n          pattern: '^.{0,34}$',\n        },\n      ],\n      minItems: 5,\n      maxItems: 6,\n      help:\n        'Send a particular type of tokens to the given `ADDRESS`.  Right now, only supported `TOKEN-TYPE` is `STACKS`.  Optionally ' +\n        'include a memo string (`MEMO`) up to 34 characters long.\\n' +\n        '\\n' +\n        'If the command succeeds, it prints out a transaction ID.  You can track the confirmations on the transaction ' +\n        'via the `get_confirmations` command.  Once the transaction has 7 confirmations, the Blockstack peer network ' +\n        'will have processed it, and your payment key balance and recipient balance will be updated.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # check balances of sender and recipient before sending.\\n' +\n        '    $ # address of the key below is SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli balance SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"10000000\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli balance SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"0\"\\n' +\n        '    }\\n' +\n        '\\n' +\n        '    $ # send tokens\\n' +\n        '    $ blockstack-cli send_tokens SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY 12345 1 0 \"$PAYMENT\"\\n' +\n        '    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\\n' +\n        '\\n' +\n        '    $ # wait for transaction to be confirmed\\n' +\n        '\\n' +\n        '    $ blockstack-cli balance SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"9987655\"\\n' +\n        '    }\\n' +\n        '    $ blockstack-cli balance SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY\\n' +\n        '    {\\n' +\n        '      \"STACKS\": \"12345\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Account Management',\n    },\n    transfer: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'new_id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'keep_zonefile',\n          type: 'string',\n          realtype: 'true-or-false',\n          pattern: '^true$|^false$',\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 5,\n      maxItems: 5,\n      help:\n        'Transfer a Blockstack ID to a new address (`NEW_ID_ADDRESS`).  Optionally preserve ' +\n        'its zone file (`KEEP_ZONEFILE`).  If the command succeeds, it will print a transaction ID.  ' +\n        'Once the transaction reaches 7 confirmations, the Blockstack peer network will transfer the ' +\n        \"Blockstack ID to the new ID-address.  You can track the transaction's confirmations with \" +\n        'the `get_confirmations` command.\\n' +\n        '\\n' +\n        'NOTE: This command only works for on-chain Blockstack IDs.  It does not yet work for subdomains.\\n' +\n        '\\n' +\n        'An ID-address can only own up to 25 Blockstack IDs.  In practice, you should generate a new ' +\n        'owner key and ID-address for each name you receive (via the `get_owner_keys` command).\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get your owner key from your backup phrase with \"get_owner_keys\".\\n' +\n        '    $ # Tip: you can get your payment key from your backup phrase with \"get_payment_key\".\\n' +\n        '    $ export OWNER=\"136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ blockstack-cli transfer example.id ID-1HJA1AJvWef21XbQVL2AcTv71b6JHGPfDX true \"$OWNER\" \"$PAYMENT\"\\n' +\n        '    e09dc158e586d0c09dbcdcba917ec394e6c6ac2b9c91c4b55f32f5973e4f08fc\\n' +\n        '\\n',\n      group: 'Blockstack ID Management',\n    },\n    tx_preorder: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Generate and send `NAME_PREORDER` transaction, for a Blockstack ID to be owned ' +\n        'by a given `ID_ADDRESS`.  The name cost will be paid for by the gven `PAYMENT_KEY`.  The ' +\n        'ID-address should be a never-before-seen address, since it will be used as a salt when ' +\n        'generating the name preorder hash.\\n' +\n        '\\n' +\n        'This is a low-level command that only experienced Blockstack developers should use.  ' +\n        'If you just want to register a name, use the \"register\" command.\\n',\n      group: 'Blockstack ID Management',\n    },\n    tx_register: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'id_address',\n          type: 'string',\n          realtype: 'id-address',\n          pattern: ID_ADDRESS_PATTERN,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'zonefile_hash',\n          type: 'string',\n          realtype: 'zoenfile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n      ],\n      minItems: 3,\n      maxItems: 5,\n      help:\n        'Generate and send a NAME_REGISTRATION transaction, assigning the given `BLOCKSTACK_ID` ' +\n        'to the given `ID_ADDRESS`.  Optionally pair the Blockstack ID with a zone file (`ZONEFILE`) or ' +\n        'the hash of the zone file (`ZONEFILE_HASH`).  You will need to push the zone file to the peer ' +\n        'network after the transaction confirms (i.e. with `zonefile_push`).\\n' +\n        '\\n' +\n        'This is a low-level command that only experienced Blockstack developers should use.  If you ' +\n        'just want to register a name, you should use the `register` command.',\n      group: 'Blockstack ID Management',\n    },\n    update: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'on-chain-blockstack_id',\n          pattern: NAME_PATTERN,\n        },\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'payment_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN_ANY}`,\n        },\n        {\n          name: 'zonefile_hash',\n          type: 'string',\n          realtype: 'zonefile_hash',\n          pattern: ZONEFILE_HASH_PATTERN,\n        },\n      ],\n      minItems: 4,\n      maxItems: 5,\n      help:\n        'Update the zonefile for an on-chain Blockstack ID.  You can generate a well-formed ' +\n        'zone file using the `make_zonefile` command, or you can supply your own.  Zone files can be ' +\n        'up to 40Kb.  Alternatively, if you only want to announce the hash of a zone file (or any ' +\n        'arbitrary 20-byte hex string), you can do so by passing a value for `ZONEFILE_HASH`.  If `ZONEFILE_HASH` ' +\n        'is given, then the value for `ZONEFILE` will be ignored.\\n' +\n        '\\n' +\n        'If this command succeeds, it prints out a transaction ID.  Once the transaction has 7 confirmations, ' +\n        \"the Blockstack peer network will set the name's zone file hash to the `RIPEMD160`(SHA256) hash of \" +\n        'the given zone file (or it will simply set it to the hash given in `ZONEFILE_HASH`).\\n' +\n        '\\n' +\n        'Once the transaction confirms, you will need to replicate the zone file to the Blockstack peer network.  ' +\n        'This can be done with the `zonefile_push` command.  Until you do so, no Blockstack clients will be able ' +\n        'to obtain the zone file announced by this command.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get your owner and payment keys from your 12-word backup phrase using the get_owner_keys and get_payment_key commands.\\n' +\n        '    $ export OWNER=\"6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01\"\\n' +\n        '    $ export PAYMENT=\"bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401\"\\n' +\n        '    $ # make a new zone file\\n' +\n        '    $ blockstack-cli make_zonefile example.id ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82 https://my.gaia.hub/hub > /tmp/zonefile.txt\\n' +\n        '    \\n' +\n        '    $ # update the name to reference this new zone file\\n' +\n        '    $ blockstack-cli update example.id /tmp/zonefile.txt \"$OWNER\" \"$PAYMENT\"\\n' +\n        '    8e94a5b6647276727a343713d3213d587836e1322b1e38bc158406f5f8ebe3fd\\n' +\n        '    \\n' +\n        '    $ # check confirmations\\n' +\n        '    $ blockstack-cli get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\\n' +\n        '    {\\n' +\n        '      \"blockHeight\": 567890,\\n' +\n        '      \"confirmations\": 7,\\n' +\n        '    }\\n' +\n        '    \\n' +\n        '    $ # send out the new zone file to a Blockstack peer\\n' +\n        '    $ blockstack-cli -H https://core.blockstack.org zonefile_push /tmp/zonefile.txt\\n' +\n        '    [\\n' +\n        '      \"https://core.blockstack.org\"\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Blockstack ID Management',\n    },\n    whois: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: NAME_PATTERN + '|' + SUBDOMAIN_PATTERN,\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Look up the zone file and owner of a Blockstack ID.  Works with both on-chain and off-chain names.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli whois example.id\\n' +\n        '    {\\n' +\n        '      \"address\": \"1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82\",\\n' +\n        '      \"block_renewed_at\": 567890,\\n' +\n        '      \"blockchain\": \"bitcoin\",\\n' +\n        '      \"expire_block\": 687010,\\n' +\n        '      \"grace_period\": false,\\n' +\n        '      \"last_transaction_height\": \"567891\",\\n' +\n        '      \"last_txid\": \"a564aa482ee43eb2bdfb016e01ea3b950bab0cfa39eace627d632e73c7c93e48\",\\n' +\n        '      \"owner_script\": \"76a9146c1c2fc3cf74d900c51e9b5628205130d7b98ae488ac\",\\n' +\n        '      \"renewal_deadline\": 692010,\\n' +\n        '      \"resolver\": null,\\n' +\n        '      \"status\": \"registered\",\\n' +\n        '      \"zonefile\": \"$ORIGIN example.id\\\\n$TTL 3600\\\\n_http._tcp URI 10 1 \\\\\"https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json\\\\\"\\\\n\",\\n' +\n        '      \"zonefile_hash\": \"ae4ee8e7f30aa890468164e667e2c203266f726e\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'Querying Blockstack IDs',\n    },\n    zonefile_push: {\n      type: 'array',\n      items: [\n        {\n          name: 'zonefile',\n          type: 'string',\n          realtype: 'path',\n        },\n      ],\n      minItems: 1,\n      maxItems: 1,\n      help:\n        'Push a zone file on disk to the Blockstack peer network.  The zone file must ' +\n        'correspond to a zone file hash that has already been announced.  That is, you use this command ' +\n        'in conjunction with the `register`, `update`, `renew`, or `name_import` commands.\\n' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ blockstack-cli -H https://core.blockstack.org zonefile_push /path/to/zonefile.txt\\n' +\n        '    [\\n' +\n        '      \"https://core.blockstack.org\"\\n' +\n        '    ]\\n' +\n        '\\n',\n      group: 'Peer Services',\n    },\n    get_did_configuration: {\n      type: 'array',\n      items: [\n        {\n          name: 'blockstack_id',\n          type: 'string',\n          realtype: 'blockstack_id',\n          pattern: NAME_PATTERN + '|' + SUBDOMAIN_PATTERN,\n        },\n        {\n          name: 'domain',\n          type: 'string',\n          realtype: 'domain',\n          pattern: NAME_PATTERN + '|' + SUBDOMAIN_PATTERN,\n        },\n        {\n          name: 'owner_key',\n          type: 'string',\n          realtype: 'private_key',\n          pattern: `${PRIVATE_KEY_PATTERN}`,\n        },\n      ],\n      minItems: 3,\n      maxItems: 3,\n      help:\n        'Creates a DID configuration for the given blockstack id and domain to create a link between both.' +\n        'The specification is define by the Decentralized Identity Foundation at https://identity.foundation/specs/did-configuration/\\n' +\n        'The DID configuration should be placed in the json file \".well_known/did_configuration\"' +\n        '\\n' +\n        'Example:\\n' +\n        '\\n' +\n        '    $ # Tip: you can get your owner keys from your 12-word backup phrase using the get_owner_keys command.\\n' +\n        '    $ export PRIVATE_OWNER_KEY=\"6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01\"\\n' +\n        '    $ blockstack-cli get_did_configuration public_profile_for_testing.id.blockstack helloblockstack.com PRIVATE_OWNER_KEY\\n' +\n        '    {\\n' +\n        '       \"entries\": [\\n' +\n        '          {\\n' +\n        '            \"did\": \"did:stack:v0:SewTRvPZUEQGdr45QvEnVMGHZBhx3FT1Jj-0\",\\n' +\n        '            \"jwt\": \"eyJ0eXAiOiJKV1QiL....\"\\n' +\n        '          }\\n' +\n        '       ]\\n' +\n        '    }\\n' +\n        '\\n' +\n        'The decoded content of the jwt above is \\n' +\n        '    {\\n' +\n        '       \"header\": {\\n' +\n        '          \"typ\": \"JWT\", \"alg\": \"ES256K\"\\n' +\n        '       },\\n' +\n        '       \"payload\": {\\n' +\n        '           \"iss\": \"did:stack:v0:SewTRvPZUEQGdr45QvEnVMGHZBhx3FT1Jj-0\",\\n' +\n        '           \"domain\": \"helloblockstack.com\",\\n' +\n        '           \"exp\": \"2020-12-07T13:05:28.375Z\"\\n' +\n        '       },\\n' +\n        '       \"signature\": \"NDY7ISzgAHKcZDvbxzTxQdVnf6xWMZ46w5vHcDpNx_1Fsyip0M6E6GMq_2YZ-gUcwmwlo8Ag9jgnfOkaBIFpoQ\"\\n' +\n        '    }\\n' +\n        '\\n',\n      group: 'DID',\n    },\n  } as CLI_PROP"
				},
				{
					"id": 110,
					"name": "strict",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2571,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 107,
					"name": "type",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 134,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"object\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						109,
						108,
						110,
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 133,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 437,
			"name": "COMMANDS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 438,
					"name": "authenticator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1521,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 404,
						"name": "authDaemon"
					},
					"defaultValue": "authDaemon"
				},
				{
					"id": 439,
					"name": "balance",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1523,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 339,
						"name": "balance"
					},
					"defaultValue": "balance"
				},
				{
					"id": 440,
					"name": "call_contract_func",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1524,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 355,
						"name": "contractFunctionCall"
					},
					"defaultValue": "contractFunctionCall"
				},
				{
					"id": 441,
					"name": "call_read_only_contract_func",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1525,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"id": 359,
						"name": "readOnlyContractFunctionCall"
					},
					"defaultValue": "readOnlyContractFunctionCall"
				},
				{
					"id": 442,
					"name": "convert_address",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1526,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 400,
						"name": "addressConvert"
					},
					"defaultValue": "addressConvert"
				},
				{
					"id": 443,
					"name": "decrypt_keychain",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1527,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 412,
						"name": "decryptMnemonic"
					},
					"defaultValue": "decryptMnemonic"
				},
				{
					"id": 444,
					"name": "deploy_contract",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1528,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 351,
						"name": "contractDeploy"
					},
					"defaultValue": "contractDeploy"
				},
				{
					"id": 445,
					"name": "docs",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1529,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 428,
						"name": "printDocs"
					},
					"defaultValue": "printDocs"
				},
				{
					"id": 446,
					"name": "encrypt_keychain",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1530,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 408,
						"name": "encryptMnemonic"
					},
					"defaultValue": "encryptMnemonic"
				},
				{
					"id": 447,
					"name": "gaia_deletefile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1531,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 375,
						"name": "gaiaDeleteFile"
					},
					"defaultValue": "gaiaDeleteFile"
				},
				{
					"id": 448,
					"name": "gaia_dump_bucket",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1532,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 388,
						"name": "gaiaDumpBucket"
					},
					"defaultValue": "gaiaDumpBucket"
				},
				{
					"id": 449,
					"name": "gaia_getfile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1533,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 367,
						"name": "gaiaGetFile"
					},
					"defaultValue": "gaiaGetFile"
				},
				{
					"id": 450,
					"name": "gaia_listfiles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1534,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 379,
						"name": "gaiaListFiles"
					},
					"defaultValue": "gaiaListFiles"
				},
				{
					"id": 451,
					"name": "gaia_putfile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1535,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 371,
						"name": "gaiaPutFile"
					},
					"defaultValue": "gaiaPutFile"
				},
				{
					"id": 452,
					"name": "gaia_restore_bucket",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1536,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"id": 392,
						"name": "gaiaRestoreBucket"
					},
					"defaultValue": "gaiaRestoreBucket"
				},
				{
					"id": 453,
					"name": "gaia_sethub",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1537,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 396,
						"name": "gaiaSetHub"
					},
					"defaultValue": "gaiaSetHub"
				},
				{
					"id": 455,
					"name": "get_account_history",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1539,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"id": 343,
						"name": "getAccountHistory"
					},
					"defaultValue": "getAccountHistory"
				},
				{
					"id": 454,
					"name": "get_address",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1538,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 363,
						"name": "getKeyAddress"
					},
					"defaultValue": "getKeyAddress"
				},
				{
					"id": 456,
					"name": "get_app_keys",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1540,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 319,
						"name": "getAppKeys"
					},
					"defaultValue": "getAppKeys"
				},
				{
					"id": 457,
					"name": "get_owner_keys",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1541,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 323,
						"name": "getOwnerKeys"
					},
					"defaultValue": "getOwnerKeys"
				},
				{
					"id": 458,
					"name": "get_payment_key",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1542,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 327,
						"name": "getPaymentKey"
					},
					"defaultValue": "getPaymentKey"
				},
				{
					"id": 459,
					"name": "get_stacks_wallet_key",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1543,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"id": 331,
						"name": "getStacksWalletKey"
					},
					"defaultValue": "getStacksWalletKey"
				},
				{
					"id": 460,
					"name": "make_keychain",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1544,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 335,
						"name": "makeKeychain"
					},
					"defaultValue": "makeKeychain"
				},
				{
					"id": 461,
					"name": "profile_sign",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1545,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 307,
						"name": "profileSign"
					},
					"defaultValue": "profileSign"
				},
				{
					"id": 462,
					"name": "profile_store",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1546,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 315,
						"name": "profileStore"
					},
					"defaultValue": "profileStore"
				},
				{
					"id": 463,
					"name": "profile_verify",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1547,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 311,
						"name": "profileVerify"
					},
					"defaultValue": "profileVerify"
				},
				{
					"id": 464,
					"name": "send_tokens",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1549,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 347,
						"name": "sendTokens"
					},
					"defaultValue": "sendTokens"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						438,
						439,
						440,
						441,
						442,
						443,
						444,
						445,
						446,
						447,
						448,
						449,
						450,
						451,
						452,
						453,
						455,
						454,
						456,
						457,
						458,
						459,
						460,
						461,
						462,
						463,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/cli.ts",
					"line": 1520,
					"character": 14
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 79,
			"name": "CONFIG_DEFAULTS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 80,
					"name": "blockstackAPIUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 81,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://core.blockstack.org:20443\""
				},
				{
					"id": 81,
					"name": "blockstackNodeUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 82,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://core.blockstack.org:20443\""
				},
				{
					"id": 82,
					"name": "broadcastServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 83,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://core.blockstack.org:20443/v2/transactions\""
				},
				{
					"id": 84,
					"name": "logConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 85,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "CLI_LOG_CONFIG_TYPE"
					},
					"defaultValue": "LOG_CONFIG_DEFAULTS"
				},
				{
					"id": 83,
					"name": "utxoServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 84,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"https://blockchain.info\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						80,
						81,
						82,
						84,
						83
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 80,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 85,
			"name": "CONFIG_REGTEST_DEFAULTS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 91,
					"name": "bitcoindPassword",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 94,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"blockstacksystem\""
				},
				{
					"id": 92,
					"name": "bitcoindUsername",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 95,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"blockstack\""
				},
				{
					"id": 86,
					"name": "blockstackAPIUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 89,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://localhost:16268\""
				},
				{
					"id": 87,
					"name": "blockstackNodeUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 90,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://localhost:16264\""
				},
				{
					"id": 88,
					"name": "broadcastServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 91,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://localhost:16269\""
				},
				{
					"id": 90,
					"name": "logConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 93,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "CLI_LOG_CONFIG_TYPE"
					},
					"defaultValue": "LOG_CONFIG_DEFAULTS"
				},
				{
					"id": 89,
					"name": "utxoServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 92,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"http://localhost:18332\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						91,
						92,
						86,
						87,
						88,
						90,
						89
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 88,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 94,
			"name": "CONFIG_TESTNET_DEFAULTS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 95,
					"name": "blockstackAPIUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 101,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`http://${PUBLIC_TESTNET_HOST}:20443`"
				},
				{
					"id": 96,
					"name": "blockstackNodeUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 102,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`http://${PUBLIC_TESTNET_HOST}:20443`"
				},
				{
					"id": 97,
					"name": "broadcastServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 103,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`http://${PUBLIC_TESTNET_HOST}:20443/v2/transactions`"
				},
				{
					"id": 99,
					"name": "logConfig",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 105,
							"character": 11
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "CLI_LOG_CONFIG_TYPE"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 100,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 101,
											"name": "level",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "packages/cli/src/argparse.ts",
													"line": 105,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"debug\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												101
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "Object.assign({}, LOG_CONFIG_DEFAULTS, { level: 'debug' })"
				},
				{
					"id": 98,
					"name": "utxoServiceUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 104,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`http://${PUBLIC_TESTNET_HOST}:18332`"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						95,
						96,
						97,
						99,
						98
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 100,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 72,
			"name": "LOG_CONFIG_DEFAULTS",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 77,
					"name": "colorize",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 76,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 74,
					"name": "handleExceptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 73,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 78,
					"name": "json",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 77,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 73,
					"name": "level",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 72,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"info\""
				},
				{
					"id": 76,
					"name": "stringify",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 75,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				},
				{
					"id": 75,
					"name": "timestamp",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 74,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						77,
						74,
						78,
						73,
						76,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 71,
					"character": 25
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				192,
				553,
				581,
				567,
				625,
				599
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				851,
				37,
				34,
				31,
				8,
				1,
				178,
				40,
				21,
				16,
				47,
				43,
				643,
				634,
				638,
				844,
				189,
				548,
				280
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				665,
				490,
				432,
				416,
				422,
				263,
				470,
				476,
				484
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				54,
				56,
				304,
				261,
				71,
				55,
				102,
				103,
				104,
				105,
				469,
				57,
				66,
				53,
				52,
				62,
				61,
				59,
				64,
				63,
				60,
				65,
				93,
				262,
				864,
				866,
				869,
				868,
				870,
				865,
				867,
				58,
				467,
				468,
				69,
				70,
				68,
				111,
				67,
				646,
				871,
				296,
				298,
				958,
				301,
				957,
				303,
				302,
				300,
				299,
				297
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				465,
				142,
				138,
				149,
				669,
				400,
				779,
				772,
				404,
				339,
				383,
				710,
				683,
				163,
				692,
				351,
				355,
				662,
				174,
				412,
				170,
				408,
				534,
				521,
				117,
				112,
				796,
				802,
				375,
				388,
				808,
				367,
				379,
				371,
				392,
				396,
				813,
				820,
				783,
				343,
				319,
				872,
				527,
				747,
				134,
				153,
				121,
				839,
				836,
				754,
				763,
				915,
				363,
				305,
				727,
				276,
				504,
				758,
				507,
				323,
				327,
				513,
				676,
				673,
				331,
				517,
				740,
				921,
				949,
				650,
				689,
				647,
				146,
				680,
				166,
				901,
				895,
				905,
				125,
				123,
				792,
				886,
				127,
				699,
				787,
				335,
				695,
				769,
				878,
				130,
				830,
				751,
				731,
				775,
				656,
				653,
				659,
				428,
				132,
				307,
				315,
				311,
				359,
				910,
				347,
				686,
				940,
				930,
				501
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				106,
				437,
				79,
				85,
				94,
				72
			]
		}
	]
}